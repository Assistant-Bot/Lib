[
  {
    "kind": "class",
    "name": "Emoji",
    "location": {
      "filename": "Assistant/src/structures/guild/Emoji.ts",
      "line": 20,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "EmojiData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "EmojiData"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/guild/Emoji.ts",
            "line": 36,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": "Client instance",
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "readonly": false,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "clientInstance",
          "location": {
            "filename": "Assistant/src/structures/guild/Emoji.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "jsDoc": "Role IDs of the emoji",
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "roles",
          "location": {
            "filename": "Assistant/src/structures/guild/Emoji.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "jsDoc": "Whether the emoji requires colons",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "requireColons",
          "location": {
            "filename": "Assistant/src/structures/guild/Emoji.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "jsDoc": "Name of the emoji",
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "Assistant/src/structures/guild/Emoji.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "jsDoc": "Whether the emoji is managed",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "managed",
          "location": {
            "filename": "Assistant/src/structures/guild/Emoji.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "jsDoc": "Whether the emoji is available",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "available",
          "location": {
            "filename": "Assistant/src/structures/guild/Emoji.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "jsDoc": "Whether the emoji is animated",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "animated",
          "location": {
            "filename": "Assistant/src/structures/guild/Emoji.ts",
            "line": 34,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "EmojiData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmojiData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Emoji.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "jsDoc": "Whether the emoji is system",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "system",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Emoji.ts",
            "line": 54,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to parse a string into an emoji\r\n\t@param emoji Emoji String",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "parse",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Emoji",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Emoji"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Emoji.ts",
            "line": 62,
            "col": 4
          }
        }
      ],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Intents",
    "location": {
      "filename": "Assistant/src/util/Intents.ts",
      "line": 53,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "intents",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "IntentTypes",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "IntentTypes"
                    }
                  }
                }
              },
              "right": "<UNIMPLEMENTED>",
              "tsType": null
            }
          ],
          "location": {
            "filename": "Assistant/src/util/Intents.ts",
            "line": 56,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "IntentTypes",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "IntentTypes"
              }
            }
          },
          "readonly": false,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "currentIntents",
          "location": {
            "filename": "Assistant/src/util/Intents.ts",
            "line": 54,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "defaults",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Intents",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Intents"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Intents.ts",
            "line": 60,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "all",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Intents",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Intents"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Intents.ts",
            "line": 64,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "privileged",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Intents",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Intents"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Intents.ts",
            "line": 68,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "from",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "n",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Intents",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Intents"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Intents.ts",
            "line": 72,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "fromArray",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "intents",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "IntentTypes",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "IntentTypes"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Intents",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Intents"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Intents.ts",
            "line": 92,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "has",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "intent",
                "optional": false,
                "tsType": {
                  "repr": "IntentTypes",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "IntentTypes"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Intents.ts",
            "line": 96,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "parse",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Intents.ts",
            "line": 100,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "namespace",
    "name": "Types",
    "location": {
      "filename": "./src/net/common/Types.ts",
      "line": 1,
      "col": 0
    },
    "jsDoc": null,
    "namespaceDef": {
      "elements": [
        {
          "kind": "typeAlias",
          "name": "Promiseable",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 19,
            "col": 0
          },
          "jsDoc": null,
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                },
                {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "T",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "T"
                        }
                      }
                    ],
                    "typeName": "Promise"
                  }
                }
              ]
            },
            "typeParams": [
              {
                "name": "T"
              }
            ]
          }
        },
        {
          "kind": "typeAlias",
          "name": "HTTPMethod",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 24,
            "col": 0
          },
          "jsDoc": "HTTP status codes",
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "GET",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "GET"
                  }
                },
                {
                  "repr": "HEAD",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "HEAD"
                  }
                },
                {
                  "repr": "POST",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "POST"
                  }
                },
                {
                  "repr": "PUT",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "PUT"
                  }
                },
                {
                  "repr": "DELETE",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "DELETE"
                  }
                },
                {
                  "repr": "CONNECT",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "CONNECT"
                  }
                },
                {
                  "repr": "OPTIONS",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "OPTIONS"
                  }
                },
                {
                  "repr": "TRACE",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "TRACE"
                  }
                },
                {
                  "repr": "PATCH",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "PATCH"
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "GatewayResponseBot",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 39,
            "col": 0
          },
          "jsDoc": "Discord types",
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "url",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "shards",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "session_start_limit",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "total",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "number",
                              "kind": "keyword",
                              "keyword": "number"
                            },
                            "typeParams": []
                          },
                          {
                            "name": "remaining",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "number",
                              "kind": "keyword",
                              "keyword": "number"
                            },
                            "typeParams": []
                          },
                          {
                            "name": "reset_after",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "number",
                              "kind": "keyword",
                              "keyword": "number"
                            },
                            "typeParams": []
                          },
                          {
                            "name": "max_concurrency",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "number",
                              "kind": "keyword",
                              "keyword": "number"
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            },
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "BaseData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 53,
            "col": 0
          },
          "jsDoc": "Gateway types",
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 54,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "UserFlags",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 60,
            "col": 0
          },
          "jsDoc": "User",
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "0",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 0.0
                  }
                },
                {
                  "repr": "1",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 1.0
                  }
                },
                {
                  "repr": "2",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 2.0
                  }
                },
                {
                  "repr": "8",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 8.0
                  }
                },
                {
                  "repr": "64",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 64.0
                  }
                },
                {
                  "repr": "128",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 128.0
                  }
                },
                {
                  "repr": "256",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 256.0
                  }
                },
                {
                  "repr": "512",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 512.0
                  }
                },
                {
                  "repr": "1024",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 1024.0
                  }
                },
                {
                  "repr": "2048",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 2048.0
                  }
                },
                {
                  "repr": "4096",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 4096.0
                  }
                },
                {
                  "repr": "16384",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 16384.0
                  }
                },
                {
                  "repr": "65536",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 65536.0
                  }
                },
                {
                  "repr": "131072",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 131072.0
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "NitroType",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 76,
            "col": 0
          },
          "jsDoc": null,
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "0",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 0.0
                  }
                },
                {
                  "repr": "1",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 1.0
                  }
                },
                {
                  "repr": "2",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 2.0
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "UserData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 78,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [
              {
                "repr": "BaseData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "BaseData"
                }
              }
            ],
            "methods": [],
            "properties": [
              {
                "name": "username",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 79,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "discriminator",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 80,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "avatar",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 81,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "bot",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 82,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "system",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 83,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "mfa_enabled",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 84,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "locale",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 85,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "verified",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 86,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "email",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 87,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "flags",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 88,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "UserFlags",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "UserFlags"
                  }
                },
                "typeParams": []
              },
              {
                "name": "premium_type",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 89,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "NitroType",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "NitroType"
                  }
                },
                "typeParams": []
              },
              {
                "name": "public_flags",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 90,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "UserFlags",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "UserFlags"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GuildData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 96,
            "col": 0
          },
          "jsDoc": "Guilds",
          "interfaceDef": {
            "extends": [
              {
                "repr": "BaseData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "BaseData"
                }
              }
            ],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 97,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "icon",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 98,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "icon_hash",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 99,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "splash",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 100,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "discovery_splash",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 101,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "owner",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 102,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "owner_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 103,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "permissions",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 104,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                },
                "typeParams": []
              },
              {
                "name": "region",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 105,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                },
                "typeParams": []
              },
              {
                "name": "afk_channel_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 106,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "afk_timeout",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 107,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "widget_enabled",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 108,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "widget_channel_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 109,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "verification_level",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 110,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "default_message_notifications",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 111,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "explicit_content_filter",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 112,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "roles",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 113,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "RoleData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "RoleData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "emojis",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 114,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "EmojiData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "EmojiData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "features",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 115,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                },
                "typeParams": []
              },
              {
                "name": "mfa_level",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 116,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "application_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 117,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "system_channel_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 118,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "system_channel_flags",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 119,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "rules_channel_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 120,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "joined_at",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 121,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "large",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 122,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "unavailable",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 123,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "member_count",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 124,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "voice_states",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 125,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                },
                "typeParams": []
              },
              {
                "name": "members",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 126,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "MemberData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MemberData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "channels",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 127,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "ChannelData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ChannelData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "presences",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 128,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                },
                "typeParams": []
              },
              {
                "name": "max_presences",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 129,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "max_members",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 130,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "vanity_url_code",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 131,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "description",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 132,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "banner",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 133,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "premium_tier",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 134,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "premium_subscription_count",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 135,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "preferred_locale",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 136,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "public_updates_channel_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 137,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "max_video_channel_users",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 138,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "approximate_member_count",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 139,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "approximate_presence_count",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 140,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "ChannelTypesNumeric",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 142,
            "col": 0
          },
          "jsDoc": null,
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "0",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 0.0
                  }
                },
                {
                  "repr": "1",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 1.0
                  }
                },
                {
                  "repr": "2",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 2.0
                  }
                },
                {
                  "repr": "3",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 3.0
                  }
                },
                {
                  "repr": "4",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 4.0
                  }
                },
                {
                  "repr": "5",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 5.0
                  }
                },
                {
                  "repr": "6",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 6.0
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "ChannelTypes",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 144,
            "col": 0
          },
          "jsDoc": null,
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Text",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "Text"
                  }
                },
                {
                  "repr": "DM",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "DM"
                  }
                },
                {
                  "repr": "Voice",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "Voice"
                  }
                },
                {
                  "repr": "Group",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "Group"
                  }
                },
                {
                  "repr": "Category",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "Category"
                  }
                },
                {
                  "repr": "News",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "News"
                  }
                },
                {
                  "repr": "Store",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "Store"
                  }
                },
                {
                  "repr": "Unknown",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "Unknown"
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GuildEditOptions",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 154,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 155,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "region",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 156,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "verificationLevel",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 157,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "defaultMessageNotifications",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 158,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "explicitContentFilter",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 159,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "afkChannelID",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 160,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "afkTimeout",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 161,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "icon",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 162,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "ownerID",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 163,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "splash",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 164,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "banner",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 165,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "systemChannelID",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 166,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "rulesChannelID",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 167,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "publicUpdatesChannelID",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 168,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "preferredLocale",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 169,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GuildAuditLogData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 172,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "webhooks",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 173,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "WebhookData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "WebhookData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "users",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 174,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "UserData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "UserData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "audit_log_entries",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 175,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "GuildAuditLogEntryData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildAuditLogEntryData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "integrations",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 176,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GuildAuditLog",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 179,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "webhooks",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 180,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "WebhookData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "WebhookData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "users",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 181,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "User",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "User"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "entries",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 182,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "GuildAuditLogEntry",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildAuditLogEntry"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "integrations",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 183,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GuildAuditLogEntryData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 186,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 187,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "target_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 188,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "changes",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 189,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "GuildAuditLogEntryChange",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildAuditLogEntryChange"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "user_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 190,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "action_type",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 191,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "options",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 192,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "GuildAuditLogEntryOptional",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildAuditLogEntryOptional"
                  }
                },
                "typeParams": []
              },
              {
                "name": "reason",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 193,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GuildAuditLogEntry",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 196,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 197,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "targetID",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 198,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "changes",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 199,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "GuildAuditLogEntryChange",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildAuditLogEntryChange"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "userID",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 200,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "actionType",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 201,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "GuildAuditLogActionType",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildAuditLogActionType"
                  }
                },
                "typeParams": []
              },
              {
                "name": "options",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 202,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "GuildAuditLogEntryOptional",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildAuditLogEntryOptional"
                  }
                },
                "typeParams": []
              },
              {
                "name": "reason",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 203,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GuildAuditLogEntryOptional",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 206,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "delete_member_days",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 207,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "members_removed",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 208,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "channel_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 209,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "message_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 210,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "count",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 211,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 212,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "type",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 213,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "0",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "0"
                      }
                    },
                    {
                      "repr": "1",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "1"
                      }
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "role_name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 214,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "GuildAuditLogEntryChangeKey",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 217,
            "col": 0
          },
          "jsDoc": null,
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "icon_hash",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "icon_hash"
                  }
                },
                {
                  "repr": "splash_hash",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "splash_hash"
                  }
                },
                {
                  "repr": "owner_id",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "owner_id"
                  }
                },
                {
                  "repr": "region",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "region"
                  }
                },
                {
                  "repr": "afk_channel_id",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "afk_channel_id"
                  }
                },
                {
                  "repr": "afk_timeout",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "afk_timeout"
                  }
                },
                {
                  "repr": "mfa_level",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "mfa_level"
                  }
                },
                {
                  "repr": "verification_level",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "verification_level"
                  }
                },
                {
                  "repr": "explicit_content_filter",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "explicit_content_filter"
                  }
                },
                {
                  "repr": "default_message_notifications",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "default_message_notifications"
                  }
                },
                {
                  "repr": "vanity_url_code",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "vanity_url_code"
                  }
                },
                {
                  "repr": "$add",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "$add"
                  }
                },
                {
                  "repr": "$remove",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "$remove"
                  }
                },
                {
                  "repr": "prune_delete_days",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "prune_delete_days"
                  }
                },
                {
                  "repr": "widget_enabled",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "widget_enabled"
                  }
                },
                {
                  "repr": "widget_channel_id",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "widget_channel_id"
                  }
                },
                {
                  "repr": "system_channel_id",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "system_channel_id"
                  }
                },
                {
                  "repr": "position",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "position"
                  }
                },
                {
                  "repr": "topic",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "topic"
                  }
                },
                {
                  "repr": "bitrate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "bitrate"
                  }
                },
                {
                  "repr": "permission_overwrites",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "permission_overwrites"
                  }
                },
                {
                  "repr": "nsfw",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "nsfw"
                  }
                },
                {
                  "repr": "application_id",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "application_id"
                  }
                },
                {
                  "repr": "rate_limit_per_user",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "rate_limit_per_user"
                  }
                },
                {
                  "repr": "permissions",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "permissions"
                  }
                },
                {
                  "repr": "color",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "color"
                  }
                },
                {
                  "repr": "hoist",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "hoist"
                  }
                },
                {
                  "repr": "mentionable",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "mentionable"
                  }
                },
                {
                  "repr": "allow",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "allow"
                  }
                },
                {
                  "repr": "deny",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "deny"
                  }
                },
                {
                  "repr": "code",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "code"
                  }
                },
                {
                  "repr": "channel_id",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "channel_id"
                  }
                },
                {
                  "repr": "invite_id",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "invite_id"
                  }
                },
                {
                  "repr": "max_users",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "max_users"
                  }
                },
                {
                  "repr": "uses",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "uses"
                  }
                },
                {
                  "repr": "max_age",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "max_age"
                  }
                },
                {
                  "repr": "temporary",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "temporary"
                  }
                },
                {
                  "repr": "deaf",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "deaf"
                  }
                },
                {
                  "repr": "mute",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "mute"
                  }
                },
                {
                  "repr": "nick",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "nick"
                  }
                },
                {
                  "repr": "avatar_hash",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "avatar_hash"
                  }
                },
                {
                  "repr": "id",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "id"
                  }
                },
                {
                  "repr": "enable_emoticons",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "enable_emoticons"
                  }
                },
                {
                  "repr": "expire_behavior",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "expire_behavior"
                  }
                },
                {
                  "repr": "expire_grace_period",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "expire_grace_period"
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "enum",
          "name": "GuildAuditLogActionType",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 264,
            "col": 0
          },
          "jsDoc": null,
          "enumDef": {
            "members": [
              {
                "name": "GUILD_UPDATE",
                "jsDoc": null
              },
              {
                "name": "CHANNEL_CREATE",
                "jsDoc": null
              },
              {
                "name": "CHANNEL_UPDATE",
                "jsDoc": null
              },
              {
                "name": "CHANNEL_DELETE",
                "jsDoc": null
              },
              {
                "name": "CHANNEL_OVERWRITE_CREATE",
                "jsDoc": null
              },
              {
                "name": "CHANNEL_OVERWRITE_UPDATE",
                "jsDoc": null
              },
              {
                "name": "CHANNEL_OVERWRITE_DELETe",
                "jsDoc": null
              },
              {
                "name": "MEMBER_KICK",
                "jsDoc": null
              },
              {
                "name": "MEMBER_PRUNE",
                "jsDoc": null
              },
              {
                "name": "MEMBER_BAN_ADD",
                "jsDoc": null
              },
              {
                "name": "MEMBER_BAN_REMOVE",
                "jsDoc": null
              },
              {
                "name": "MEMBER_UPDATE",
                "jsDoc": null
              },
              {
                "name": "MEMBER_ROLE_UPDATE",
                "jsDoc": null
              },
              {
                "name": "MEMBER_MOVE",
                "jsDoc": null
              },
              {
                "name": "MEMBER_DISCONNECT",
                "jsDoc": null
              },
              {
                "name": "BOT_ADD",
                "jsDoc": null
              },
              {
                "name": "ROLE_CREATE",
                "jsDoc": null
              },
              {
                "name": "ROLE_UPDATE",
                "jsDoc": null
              },
              {
                "name": "ROLE_DELETE",
                "jsDoc": null
              },
              {
                "name": "INVITE_CREATE",
                "jsDoc": null
              },
              {
                "name": "INVITE_UPDATE",
                "jsDoc": null
              },
              {
                "name": "INVITE_DELETE",
                "jsDoc": null
              },
              {
                "name": "WEBHOOK_CREATE",
                "jsDoc": null
              },
              {
                "name": "WEBHOOK_UPDATE",
                "jsDoc": null
              },
              {
                "name": "WEBHOOK_DELETE",
                "jsDoc": null
              },
              {
                "name": "EMOJI_CREATE",
                "jsDoc": null
              },
              {
                "name": "EMOJI_UPDATE",
                "jsDoc": null
              },
              {
                "name": "EMOJI_DELETE",
                "jsDoc": null
              },
              {
                "name": "MESSAGE_DELETE",
                "jsDoc": null
              },
              {
                "name": "MESSAGE_BULK_DELETE",
                "jsDoc": null
              },
              {
                "name": "MESSAGE_PIN",
                "jsDoc": null
              },
              {
                "name": "MESSAGE_UNPIN",
                "jsDoc": null
              },
              {
                "name": "INTEGRATION_CREATE",
                "jsDoc": null
              },
              {
                "name": "INTEGRATION_UPDATE",
                "jsDoc": null
              },
              {
                "name": "INTEGRATION_DELETE",
                "jsDoc": null
              }
            ]
          }
        },
        {
          "kind": "interface",
          "name": "GuildAuditLogEntryChange",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 302,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "new_value",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 303,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "AnyStructureData",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "AnyStructureData"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "AnyStructureData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "AnyStructureData"
                        }
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "old_value",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 304,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "AnyStructureData",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "AnyStructureData"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "AnyStructureData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "AnyStructureData"
                        }
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "key",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 305,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "GuildAuditLogEntryChangeKey",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildAuditLogEntryChangeKey"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "GuildAuditLogQueryParams",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 308,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "userID",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 309,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "actionType",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 310,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "before",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 311,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "limit",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 312,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "BanData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 315,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "reason",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 316,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "user",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 317,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "UserData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "UserData"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "PermissionOverwrites",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 322,
            "col": 0
          },
          "jsDoc": "Channels",
          "interfaceDef": {
            "extends": [
              {
                "repr": "BaseData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "BaseData"
                }
              }
            ],
            "methods": [],
            "properties": [
              {
                "name": "type",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 323,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "0",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 0.0
                      }
                    },
                    {
                      "repr": "1",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 1.0
                      }
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "allow",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 324,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "deny",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 325,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "PartialChannelData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 328,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [
              {
                "repr": "BaseData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "BaseData"
                }
              }
            ],
            "methods": [],
            "properties": [
              {
                "name": "type",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 329,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "ChannelTypesNumeric",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ChannelTypesNumeric"
                  }
                },
                "typeParams": []
              },
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 330,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ChannelData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 333,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [
              {
                "repr": "BaseData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "BaseData"
                }
              }
            ],
            "methods": [],
            "properties": [
              {
                "name": "type",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 334,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "0",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 0.0
                      }
                    },
                    {
                      "repr": "1",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 1.0
                      }
                    },
                    {
                      "repr": "2",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 2.0
                      }
                    },
                    {
                      "repr": "3",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 3.0
                      }
                    },
                    {
                      "repr": "4",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 4.0
                      }
                    },
                    {
                      "repr": "5",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 5.0
                      }
                    },
                    {
                      "repr": "6",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 6.0
                      }
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 335,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "guild_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 336,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "position",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 337,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "permission_overwrites",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 338,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "PermissionOverwrites",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "PermissionOverwrites"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "topic",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 339,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "nsfw",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 340,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "last_message_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 341,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "bitrate",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 342,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "user_limit",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 343,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "rate_limit_per_user",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 344,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "recipients",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 345,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "UserData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "UserData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "icon",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 346,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "owner_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 347,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "application_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 348,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "parent_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 349,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "last_pin_timestamp",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 350,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ChannelEditOption",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 353,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 354,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "type",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 355,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "0",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 0.0
                      }
                    },
                    {
                      "repr": "1",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 1.0
                      }
                    },
                    {
                      "repr": "2",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 2.0
                      }
                    },
                    {
                      "repr": "3",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 3.0
                      }
                    },
                    {
                      "repr": "4",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 4.0
                      }
                    },
                    {
                      "repr": "5",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 5.0
                      }
                    },
                    {
                      "repr": "6",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 6.0
                      }
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "position",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 356,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "topic",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 357,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "nsfw",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 358,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "rateLimitPerUser",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 359,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "bitrate",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 360,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "userLimit",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 361,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "permissionsOverwrites",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 362,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "PermissionOverwrites",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "PermissionOverwrites"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "parentID",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 363,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "ChannelCreateOption",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 366,
            "col": 0
          },
          "jsDoc": null,
          "typeAliasDef": {
            "tsType": {
              "repr": "ChannelEditOption",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ChannelEditOption"
              }
            },
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "RoleData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 369,
            "col": 0
          },
          "jsDoc": "Role",
          "interfaceDef": {
            "extends": [
              {
                "repr": "BaseData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "BaseData"
                }
              }
            ],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 370,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "guild_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 371,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "color",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 372,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "hoist",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 373,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "position",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 374,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "permissions",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 375,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "managed",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 376,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "mentionable",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 377,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "RoleEditOptions",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 380,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 381,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "permissions",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 382,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "color",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 383,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "hoist",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 384,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "mentionable",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 385,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "RoleCreateOptions",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 388,
            "col": 0
          },
          "jsDoc": null,
          "typeAliasDef": {
            "tsType": {
              "repr": "RoleEditOptions",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "RoleEditOptions"
              }
            },
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "MemberData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 391,
            "col": 0
          },
          "jsDoc": "Member",
          "interfaceDef": {
            "extends": [
              {
                "repr": "BaseData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "BaseData"
                }
              }
            ],
            "methods": [],
            "properties": [
              {
                "name": "user",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 392,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "UserData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "UserData"
                  }
                },
                "typeParams": []
              },
              {
                "name": "guild_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 393,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "nick",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 394,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "roles",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 395,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                },
                "typeParams": []
              },
              {
                "name": "joined_at",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 396,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "premium_since",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 397,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "deaf",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 398,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "mute",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 399,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "AttachmentData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 403,
            "col": 0
          },
          "jsDoc": "Messages",
          "interfaceDef": {
            "extends": [
              {
                "repr": "BaseData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "BaseData"
                }
              }
            ],
            "methods": [],
            "properties": [
              {
                "name": "filename",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 404,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "size",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 405,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "url",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 406,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "proxy_url",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 407,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "height",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 408,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "width",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 409,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "EmbedData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 412,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "title",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 413,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "type",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 414,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "rich",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "rich"
                      }
                    },
                    {
                      "repr": "image",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "image"
                      }
                    },
                    {
                      "repr": "video",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "video"
                      }
                    },
                    {
                      "repr": "gifv",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "gifv"
                      }
                    },
                    {
                      "repr": "article",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "article"
                      }
                    },
                    {
                      "repr": "link",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "link"
                      }
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "description",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 415,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "url",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 416,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "timestamp",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 417,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "color",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 418,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "footer",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 419,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "text",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "icon_url",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "proxy_icon_url",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                },
                "typeParams": []
              },
              {
                "name": "image",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 424,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "url",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "proxy_url",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "height",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "width",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                },
                "typeParams": []
              },
              {
                "name": "thumbnail",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 430,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "url",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "height",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "width",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                },
                "typeParams": []
              },
              {
                "name": "video",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 435,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "url",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "width",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "height",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                },
                "typeParams": []
              },
              {
                "name": "provider",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 440,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "name",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "url",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                },
                "typeParams": []
              },
              {
                "name": "author",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 444,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "name",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "url",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "icon_url",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "proxy_icon_url",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                },
                "typeParams": []
              },
              {
                "name": "fields",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 450,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "typeLiteral",
                        "typeLiteral": {
                          "methods": [],
                          "properties": [
                            {
                              "name": "name",
                              "params": [],
                              "computed": false,
                              "optional": false,
                              "tsType": {
                                "repr": "string",
                                "kind": "keyword",
                                "keyword": "string"
                              },
                              "typeParams": []
                            },
                            {
                              "name": "value",
                              "params": [],
                              "computed": false,
                              "optional": false,
                              "tsType": {
                                "repr": "string",
                                "kind": "keyword",
                                "keyword": "string"
                              },
                              "typeParams": []
                            },
                            {
                              "name": "inline",
                              "params": [],
                              "computed": false,
                              "optional": true,
                              "tsType": {
                                "repr": "boolean",
                                "kind": "keyword",
                                "keyword": "boolean"
                              },
                              "typeParams": []
                            }
                          ],
                          "callSignatures": [],
                          "indexSignatures": []
                        }
                      }
                    ],
                    "typeName": "Array"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "enum",
          "name": "MessageType",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 457,
            "col": 0
          },
          "jsDoc": null,
          "enumDef": {
            "members": [
              {
                "name": "DEFAULT",
                "jsDoc": null
              },
              {
                "name": "RECIPIENT_ADD",
                "jsDoc": null
              },
              {
                "name": "RECIPIENT_REMOVE",
                "jsDoc": null
              },
              {
                "name": "CALL",
                "jsDoc": null
              },
              {
                "name": "CHANNEL_NAME_CHANGE",
                "jsDoc": null
              },
              {
                "name": "CHANNEL_ICON_CHANGE",
                "jsDoc": null
              },
              {
                "name": "CHANNEL_PINNED_MESSAGE",
                "jsDoc": null
              },
              {
                "name": "GUILD_MEMBER_JOIN",
                "jsDoc": null
              },
              {
                "name": "USER_PREMIUM_GUILD_SUBSCRIPTION",
                "jsDoc": null
              },
              {
                "name": "USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_1",
                "jsDoc": null
              },
              {
                "name": "USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_2",
                "jsDoc": null
              },
              {
                "name": "USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_3",
                "jsDoc": null
              },
              {
                "name": "CHANNEL_FOLLOW_ADD",
                "jsDoc": null
              },
              {
                "name": "GUILD_DISCOVERY_DISQUALIFIED",
                "jsDoc": null
              },
              {
                "name": "GUILD_DISCOVERY_REQUALIFIED",
                "jsDoc": null
              },
              {
                "name": "REPLY",
                "jsDoc": null
              },
              {
                "name": "APPLICATION_COMMAND",
                "jsDoc": null
              }
            ]
          }
        },
        {
          "kind": "interface",
          "name": "MessageData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 477,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [
              {
                "repr": "BaseData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "BaseData"
                }
              }
            ],
            "methods": [],
            "properties": [
              {
                "name": "channel_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 478,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "guild_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 479,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "author",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 480,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "UserData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "UserData"
                  }
                },
                "typeParams": []
              },
              {
                "name": "member",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 481,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "MemberData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MemberData"
                  }
                },
                "typeParams": []
              },
              {
                "name": "content",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 482,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "timestamp",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 483,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "edited_timestamp",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 484,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "tts",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 485,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "mention_everyone",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 486,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "mentions",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 487,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "UserData",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "UserData"
                            }
                          },
                          {
                            "repr": "Partial",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": [
                                {
                                  "repr": "MemberData",
                                  "kind": "typeRef",
                                  "typeRef": {
                                    "typeParams": null,
                                    "typeName": "MemberData"
                                  }
                                }
                              ],
                              "typeName": "Partial"
                            }
                          }
                        ]
                      }
                    ],
                    "typeName": "Array"
                  }
                },
                "typeParams": []
              },
              {
                "name": "mention_roles",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 488,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "RoleData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "RoleData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "mention_channels",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 489,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "ChannelData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ChannelData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "attachments",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 490,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "AttachmentData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "AttachmentData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "embed",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 491,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "EmbedData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmbedData"
                  }
                },
                "typeParams": []
              },
              {
                "name": "embeds",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 492,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "EmbedData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "EmbedData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "reactions",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 493,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "ReactionData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ReactionData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "nonce",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 494,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "pinned",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 495,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "webhook_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 496,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "type",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 497,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "MessageType",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessageType"
                  }
                },
                "typeParams": []
              },
              {
                "name": "activity",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 498,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "type",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "1",
                              "kind": "literal",
                              "literal": {
                                "kind": "number",
                                "number": 1.0
                              }
                            },
                            {
                              "repr": "2",
                              "kind": "literal",
                              "literal": {
                                "kind": "number",
                                "number": 2.0
                              }
                            },
                            {
                              "repr": "3",
                              "kind": "literal",
                              "literal": {
                                "kind": "number",
                                "number": 3.0
                              }
                            },
                            {
                              "repr": "5",
                              "kind": "literal",
                              "literal": {
                                "kind": "number",
                                "number": 5.0
                              }
                            }
                          ]
                        },
                        "typeParams": []
                      },
                      {
                        "name": "party_id",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                },
                "typeParams": []
              },
              {
                "name": "application",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 502,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "id",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "cover_image",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "description",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "icon",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "name",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                },
                "typeParams": []
              },
              {
                "name": "message_reference",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 509,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "message_id",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "channel_id",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "guild_id",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                },
                "typeParams": []
              },
              {
                "name": "flags",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 514,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "stickers",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 515,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "MessageStickerData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MessageStickerData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "referenced_message",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 516,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Partial",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": [
                          {
                            "repr": "MessageData",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "MessageData"
                            }
                          }
                        ],
                        "typeName": "Partial"
                      }
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "MessageStickerData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 519,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [
              {
                "repr": "BaseData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "BaseData"
                }
              }
            ],
            "methods": [],
            "properties": [
              {
                "name": "pack_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 520,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 521,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "description",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 522,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "tags",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 523,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "asset",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 524,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "preview_asset",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 525,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "format_type",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 531,
                  "col": 4
                },
                "jsDoc": "1 - PNG\r\n\t2 - Animated PNG\r\n\t3 - LOTTIE (lol?)",
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "1",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 1.0
                      }
                    },
                    {
                      "repr": "2",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 2.0
                      }
                    },
                    {
                      "repr": "3",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 3.0
                      }
                    }
                  ]
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "MessageConstructorData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 534,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "content",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 535,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "embed",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 536,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "EmbedData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmbedData"
                  }
                },
                "typeParams": []
              },
              {
                "name": "flags",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 537,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ReactionData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 540,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "count",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 541,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "me",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 542,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "emoji",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 543,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "Partial",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "EmojiData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "EmojiData"
                        }
                      }
                    ],
                    "typeName": "Partial"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "EmojiData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 547,
            "col": 0
          },
          "jsDoc": "Emoji",
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 548,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 549,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "roles",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 550,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                },
                "typeParams": []
              },
              {
                "name": "user",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 551,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "Partial",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "UserData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "UserData"
                        }
                      }
                    ],
                    "typeName": "Partial"
                  }
                },
                "typeParams": []
              },
              {
                "name": "require_colons",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 552,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "managed",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 553,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "animated",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 554,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "available",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 555,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "InviteData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 561,
            "col": 0
          },
          "jsDoc": "Invites",
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "code",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 562,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "channel",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 563,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "PartialChannelData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PartialChannelData"
                  }
                },
                "typeParams": []
              },
              {
                "name": "guild",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 564,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "Partial",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "GuildData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "GuildData"
                        }
                      }
                    ],
                    "typeName": "Partial"
                  }
                },
                "typeParams": []
              },
              {
                "name": "inviter",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 565,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "Partial",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "UserData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "UserData"
                        }
                      }
                    ],
                    "typeName": "Partial"
                  }
                },
                "typeParams": []
              },
              {
                "name": "target_user",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 566,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "Partial",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "UserData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "UserData"
                        }
                      }
                    ],
                    "typeName": "Partial"
                  }
                },
                "typeParams": []
              },
              {
                "name": "target_user_type",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 567,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "1",
                  "kind": "literal",
                  "literal": {
                    "kind": "number",
                    "number": 1.0
                  }
                },
                "typeParams": []
              },
              {
                "name": "approximate_presence_count",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 568,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "approximate_member_count",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 569,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "InviteMetadata",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 572,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "uses",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 573,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "max_uses",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 574,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "max_age",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 575,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "temporary",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 576,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "created_at",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 577,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "InviteCreateOptions",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 580,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "maxAge",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 581,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "maxUses",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 582,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              },
              {
                "name": "temporary",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 583,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "unique",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 584,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "targetUser",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 585,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "targetUserType",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 586,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ApplicationData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 590,
            "col": 0
          },
          "jsDoc": "Applications",
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 591,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "icon",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 592,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "description",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 593,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "rpc_origins",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 594,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                },
                "typeParams": []
              },
              {
                "name": "bot_public",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 595,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "bot_require_code_grant",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 596,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "owner",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 597,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "UserData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "UserData"
                  }
                },
                "typeParams": []
              },
              {
                "name": "summary",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 598,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "verify_key",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 599,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "team",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 600,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                },
                "typeParams": []
              },
              {
                "name": "guild_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 601,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "primary_sku_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 602,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "slug",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 603,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "cover_image",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 604,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "enum",
          "name": "ApplicationOptionType",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 608,
            "col": 0
          },
          "jsDoc": null,
          "enumDef": {
            "members": [
              {
                "name": "SUB_COMMAND",
                "jsDoc": null
              },
              {
                "name": "SUB_COMMAND_GROUP",
                "jsDoc": null
              },
              {
                "name": "STRING",
                "jsDoc": null
              },
              {
                "name": "INTEGER",
                "jsDoc": null
              },
              {
                "name": "BOOLEAN",
                "jsDoc": null
              },
              {
                "name": "USER",
                "jsDoc": null
              },
              {
                "name": "CHANNEL",
                "jsDoc": null
              },
              {
                "name": "ROLE",
                "jsDoc": null
              }
            ]
          }
        },
        {
          "kind": "interface",
          "name": "ApplicationCommandChoice",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 619,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 620,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "value",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 621,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    }
                  ]
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ApplicationCommandOption",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 624,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 625,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "description",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 626,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "type",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 627,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "ApplicationOptionType",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationOptionType"
                  }
                },
                "typeParams": []
              },
              {
                "name": "default",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 628,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "required",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 629,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "choices",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 630,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "ApplicationCommandChoice",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ApplicationCommandChoice"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "options",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 631,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "ApplicationCommandOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationCommandOption"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ApplicationCommandData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 634,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 635,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "application_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 636,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 637,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "description",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 638,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "options",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 639,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "ApplicationCommandOption",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ApplicationCommandOption"
                    }
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "InteractionDataOption",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 642,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 644,
                  "col": 4
                },
                "jsDoc": "The name of the parammeter",
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "value",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 646,
                  "col": 4
                },
                "jsDoc": "The value of the pair",
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                },
                "typeParams": []
              },
              {
                "name": "options",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 648,
                  "col": 4
                },
                "jsDoc": "Present if this option is a group or subcommand",
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "InteractionDataOption",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "InteractionDataOption"
                    }
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "InteractionData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 651,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 652,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 653,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "options",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 654,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "InteractionDataOption",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "InteractionDataOption"
                    }
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "InteractionDataRecieve",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 657,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 659,
                  "col": 4
                },
                "jsDoc": "id of the command",
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 660,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "member",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 661,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "MemberData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MemberData"
                  }
                },
                "typeParams": []
              },
              {
                "name": "type",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 662,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "ApplicationOptionType",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationOptionType"
                  }
                },
                "typeParams": []
              },
              {
                "name": "token",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 663,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "guild_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 664,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "channel_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 665,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "mentions",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 666,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                },
                "typeParams": []
              },
              {
                "name": "mention_everyone",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 667,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "data",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 668,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "InteractionData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InteractionData"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "InteractionResponse",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 671,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "type",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 673,
                  "col": 4
                },
                "jsDoc": "The type of response",
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "InteractionResponseType",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InteractionResponseType"
                  }
                },
                "typeParams": []
              },
              {
                "name": "data",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 675,
                  "col": 4
                },
                "jsDoc": "The optional response message",
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "ApplicationCommandCallbackData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationCommandCallbackData"
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ApplicationCommandCallbackData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 678,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "tts",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 679,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "content",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 680,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "embeds",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 681,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "EmbedData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "EmbedData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "allowed_mentions",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 682,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "roles",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "roles"
                      }
                    },
                    {
                      "repr": "users",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "users"
                      }
                    },
                    {
                      "repr": "everyone",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "everyone"
                      }
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "flags",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 683,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "enum",
          "name": "InteractionType",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 686,
            "col": 0
          },
          "jsDoc": null,
          "enumDef": {
            "members": [
              {
                "name": "PING",
                "jsDoc": null
              },
              {
                "name": "APPLICATION_COMMAND",
                "jsDoc": null
              }
            ]
          }
        },
        {
          "kind": "enum",
          "name": "InteractionResponseType",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 691,
            "col": 0
          },
          "jsDoc": null,
          "enumDef": {
            "members": [
              {
                "name": "PONG",
                "jsDoc": null
              },
              {
                "name": "ACKNOWLEDGE",
                "jsDoc": null
              },
              {
                "name": "CHANNEL_MESSAGE",
                "jsDoc": null
              },
              {
                "name": "CHANNEL_MESSAGE_WITH_SOURCE",
                "jsDoc": null
              },
              {
                "name": "ACK_WITH_SOURCE",
                "jsDoc": null
              }
            ]
          }
        },
        {
          "kind": "interface",
          "name": "WebhookData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 699,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 700,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "type",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 701,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "1",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 1.0
                      }
                    },
                    {
                      "repr": "2",
                      "kind": "literal",
                      "literal": {
                        "kind": "number",
                        "number": 2.0
                      }
                    }
                  ]
                },
                "typeParams": []
              },
              {
                "name": "guild_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 702,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "channel_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 703,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "user",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 704,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "UserData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "UserData"
                  }
                },
                "typeParams": []
              },
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 705,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "avatar",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 706,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "token",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 707,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "application_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 708,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "CreateWebhookData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 711,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "name",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 712,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "avatar",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 713,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "channel_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 714,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "ExecuteWebhookData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 717,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "content",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 718,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "username",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 719,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "avatar_url",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 720,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "tts",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 721,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "file",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 722,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "Uint8Array",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Uint8Array"
                  }
                },
                "typeParams": []
              },
              {
                "name": "embeds",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 723,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "EmbedData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "EmbedData"
                    }
                  }
                },
                "typeParams": []
              },
              {
                "name": "payload_json",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 724,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "allowed_mentions",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 725,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "",
                    "kind": "parenthesized",
                    "parenthesized": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "roles",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "roles"
                          }
                        },
                        {
                          "repr": "channels",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "channels"
                          }
                        },
                        {
                          "repr": "members",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "members"
                          }
                        }
                      ]
                    }
                  }
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "interface",
          "name": "VoiceState",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 728,
            "col": 0
          },
          "jsDoc": null,
          "interfaceDef": {
            "extends": [],
            "methods": [],
            "properties": [
              {
                "name": "guild_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 729,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "channel_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 730,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "user_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 731,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "member",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 732,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": true,
                "tsType": {
                  "repr": "Member",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Member"
                  }
                },
                "typeParams": []
              },
              {
                "name": "session_id",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 733,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                "typeParams": []
              },
              {
                "name": "deaf",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 734,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "mute",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 735,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "self_deaf",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 736,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "self_mute",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 737,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "self_stream",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 738,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "self_video",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 739,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              },
              {
                "name": "suppress",
                "location": {
                  "filename": "Assistant/src/net/common/Types.ts",
                  "line": 740,
                  "col": 4
                },
                "jsDoc": null,
                "params": [],
                "computed": false,
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                "typeParams": []
              }
            ],
            "callSignatures": [],
            "indexSignatures": [],
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "AnyStructureData",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 744,
            "col": 0
          },
          "jsDoc": "Generalized Types",
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "ApplicationData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationData"
                  }
                },
                {
                  "repr": "UserData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "UserData"
                  }
                },
                {
                  "repr": "UserFlags",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "UserFlags"
                  }
                },
                {
                  "repr": "MessageData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessageData"
                  }
                },
                {
                  "repr": "GuildData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildData"
                  }
                },
                {
                  "repr": "PermissionOverwrites",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PermissionOverwrites"
                  }
                },
                {
                  "repr": "PartialChannelData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PartialChannelData"
                  }
                },
                {
                  "repr": "MessageStickerData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessageStickerData"
                  }
                },
                {
                  "repr": "ReactionData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ReactionData"
                  }
                },
                {
                  "repr": "EmbedData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmbedData"
                  }
                },
                {
                  "repr": "AttachmentData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "AttachmentData"
                  }
                },
                {
                  "repr": "RoleData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RoleData"
                  }
                },
                {
                  "repr": "MemberData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MemberData"
                  }
                },
                {
                  "repr": "InviteData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InviteData"
                  }
                },
                {
                  "repr": "InviteMetadata",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InviteMetadata"
                  }
                },
                {
                  "repr": "EmojiData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "EmojiData"
                  }
                },
                {
                  "repr": "ApplicationCommandData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationCommandData"
                  }
                },
                {
                  "repr": "WebhookData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WebhookData"
                  }
                }
              ]
            },
            "typeParams": []
          }
        },
        {
          "kind": "typeAlias",
          "name": "PresenceOptions",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 764,
            "col": 0
          },
          "jsDoc": null,
          "typeAliasDef": {
            "tsType": {
              "repr": "",
              "kind": "typeLiteral",
              "typeLiteral": {
                "methods": [],
                "properties": [
                  {
                    "name": "afk",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "game",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "name",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            },
                            "typeParams": []
                          },
                          {
                            "name": "type",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "",
                              "kind": "union",
                              "union": [
                                {
                                  "repr": "0",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "number",
                                    "number": 0.0
                                  }
                                },
                                {
                                  "repr": "1",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "number",
                                    "number": 1.0
                                  }
                                },
                                {
                                  "repr": "2",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "number",
                                    "number": 2.0
                                  }
                                },
                                {
                                  "repr": "4",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "number",
                                    "number": 4.0
                                  }
                                },
                                {
                                  "repr": "5",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "number",
                                    "number": 5.0
                                  }
                                }
                              ]
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    },
                    "typeParams": []
                  },
                  {
                    "name": "since",
                    "params": [],
                    "computed": false,
                    "optional": true,
                    "tsType": {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    "typeParams": []
                  },
                  {
                    "name": "status",
                    "params": [],
                    "computed": false,
                    "optional": false,
                    "tsType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "online",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "online"
                          }
                        },
                        {
                          "repr": "dnd",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "dnd"
                          }
                        },
                        {
                          "repr": "idle",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "idle"
                          }
                        },
                        {
                          "repr": "invisible",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "invisible"
                          }
                        },
                        {
                          "repr": "offline",
                          "kind": "literal",
                          "literal": {
                            "kind": "string",
                            "string": "offline"
                          }
                        }
                      ]
                    },
                    "typeParams": []
                  }
                ],
                "callSignatures": [],
                "indexSignatures": []
              }
            },
            "typeParams": []
          }
        },
        {
          "kind": "import",
          "name": "Member",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 16,
            "col": 0
          },
          "jsDoc": "*\r\n                   _     _              _\r\n     /\\           (_)   | |            | |\r\n    /  \\   ___ ___ _ ___| |_ __ _ _ __ | |_\r\n   / /\\ \\ / __/ __| / __| __/ _` | \"_ \\| __|\r\n  / ____ \\\\__ \\__ \\ \\__ \\ || (_| | | | | |_\r\n /_/    \\_\\___/___/_|___/\\__\\__,_|_| |_|\\__|\r\n\r\nCopyright (C) 2020 Bavfalcon9\r\n\r\nThis is private software, you cannot redistribute and/or modify it in any way\r\nunless given explicit permission to do so. If you have not been given explicit\r\npermission to view or modify this software you should take the appropriate actions\r\nto remove this software from your device immediately.",
          "importDef": {
            "src": "Assistant/src/structures/guild/Member.ts",
            "imported": "default"
          }
        },
        {
          "kind": "import",
          "name": "User",
          "location": {
            "filename": "Assistant/src/net/common/Types.ts",
            "line": 17,
            "col": 0
          },
          "jsDoc": null,
          "importDef": {
            "src": "Assistant/src/structures/User.ts",
            "imported": "default"
          }
        }
      ]
    }
  },
  {
    "kind": "typeAlias",
    "name": "GatewayEvent",
    "location": {
      "filename": "Assistant/src/net/ws/packet/EventPacket.ts",
      "line": 21,
      "col": 0
    },
    "jsDoc": "Please note these may be outdated at times.",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "HELLO",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "HELLO"
            }
          },
          {
            "repr": "READY",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "READY"
            }
          },
          {
            "repr": "RESUMED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "RESUMED"
            }
          },
          {
            "repr": "RECONNECT",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "RECONNECT"
            }
          },
          {
            "repr": "INVALID_SESSION",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVALID_SESSION"
            }
          },
          {
            "repr": "CHANNEL_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CHANNEL_CREATE"
            }
          },
          {
            "repr": "CHANNEL_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CHANNEL_UPDATE"
            }
          },
          {
            "repr": "CHANNEL_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CHANNEL_DELETE"
            }
          },
          {
            "repr": "CHANNEL_PINS_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CHANNEL_PINS_UPDATE"
            }
          },
          {
            "repr": "GUILD_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_CREATE"
            }
          },
          {
            "repr": "GUILD_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_UPDATE"
            }
          },
          {
            "repr": "GUILD_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_DELETE"
            }
          },
          {
            "repr": "GUILD_BAN_ADD",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_BAN_ADD"
            }
          },
          {
            "repr": "GUILD_BAN_REMOVE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_BAN_REMOVE"
            }
          },
          {
            "repr": "GUILD_EMOJIS_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_EMOJIS_UPDATE"
            }
          },
          {
            "repr": "GUILD_INTEGRATIONS_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_INTEGRATIONS_UPDATE"
            }
          },
          {
            "repr": "GUILD_MEMBER_ADD",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_MEMBER_ADD"
            }
          },
          {
            "repr": "GUILD_MEMBER_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_MEMBER_UPDATE"
            }
          },
          {
            "repr": "GUILD_MEMBER_REMOVE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_MEMBER_REMOVE"
            }
          },
          {
            "repr": "GUILD_MEMBER_CHUNK",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_MEMBER_CHUNK"
            }
          },
          {
            "repr": "GUILD_ROLE_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_ROLE_CREATE"
            }
          },
          {
            "repr": "GUILD_ROLE_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_ROLE_UPDATE"
            }
          },
          {
            "repr": "GUILD_ROLE_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_ROLE_DELETE"
            }
          },
          {
            "repr": "GUILD_APPLICATION_COMMANDS_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_APPLICATION_COMMANDS_CREATE"
            }
          },
          {
            "repr": "GUILD_APPLICATION_COMMANDS_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_APPLICATION_COMMANDS_UPDATE"
            }
          },
          {
            "repr": "GUILD_APPLICATION_COMMANDS_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_APPLICATION_COMMANDS_DELETE"
            }
          },
          {
            "repr": "GUILD_APPLICATION_FORM_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_APPLICATION_FORM_UPDATE"
            }
          },
          {
            "repr": "GUILD_APPLICATION_FORM_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_APPLICATION_FORM_CREATE"
            }
          },
          {
            "repr": "GUILD_APPLICATION_FORM_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "GUILD_APPLICATION_FORM_DELETE"
            }
          },
          {
            "repr": "INTERACTION_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INTERACTION_CREATE"
            }
          },
          {
            "repr": "INVITE_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVITE_CREATE"
            }
          },
          {
            "repr": "INVITE_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INVITE_DELETE"
            }
          },
          {
            "repr": "MESSAGE_CREATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_CREATE"
            }
          },
          {
            "repr": "MESSAGE_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_UPDATE"
            }
          },
          {
            "repr": "MESSAGE_DELETE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_DELETE"
            }
          },
          {
            "repr": "MESSAGE_DELETE_BULK",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_DELETE_BULK"
            }
          },
          {
            "repr": "MESSAGE_REACTION_ADD",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_REACTION_ADD"
            }
          },
          {
            "repr": "MESSAGE_REACTION_REMOVE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_REACTION_REMOVE"
            }
          },
          {
            "repr": "MESSAGE_REACTION_REMOVE_ALL",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_REACTION_REMOVE_ALL"
            }
          },
          {
            "repr": "MESSAGE_REACTION_REMOVE_EMOJI",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "MESSAGE_REACTION_REMOVE_EMOJI"
            }
          },
          {
            "repr": "PRESENCE_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "PRESENCE_UPDATE"
            }
          },
          {
            "repr": "TYPINGS_START",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "TYPINGS_START"
            }
          },
          {
            "repr": "USER_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "USER_UPDATE"
            }
          },
          {
            "repr": "VOICE_STATE_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "VOICE_STATE_UPDATE"
            }
          },
          {
            "repr": "VOICE_SERVER_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "VOICE_SERVER_UPDATE"
            }
          },
          {
            "repr": "WEBHOOKS_UPDATE",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "WEBHOOKS_UPDATE"
            }
          },
          {
            "repr": "UNKNOWN",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "UNKNOWN"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "EventPacket",
    "location": {
      "filename": "Assistant/src/net/ws/packet/EventPacket.ts",
      "line": 70,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "event",
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "GatewayEvent",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GatewayEvent"
                    }
                  },
                  {
                    "repr": "undefined",
                    "kind": "keyword",
                    "keyword": "undefined"
                  }
                ]
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "any",
                "kind": "keyword",
                "keyword": "any"
              }
            },
            {
              "kind": "identifier",
              "name": "sequence",
              "optional": true,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/net/ws/packet/EventPacket.ts",
            "line": 79,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "GatewayEvent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayEvent"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "event",
          "location": {
            "filename": "Assistant/src/net/ws/packet/EventPacket.ts",
            "line": 71,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "data",
          "location": {
            "filename": "Assistant/src/net/ws/packet/EventPacket.ts",
            "line": 72,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "sequence",
          "location": {
            "filename": "Assistant/src/net/ws/packet/EventPacket.ts",
            "line": 73,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "from",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "p",
                "optional": false,
                "tsType": {
                  "repr": "Payload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Payload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "EventPacket",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EventPacket"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/packet/EventPacket.ts",
            "line": 75,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "encodeData",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/packet/EventPacket.ts",
            "line": 86,
            "col": 4
          }
        }
      ],
      "extends": "Packet",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ClientUser",
    "location": {
      "filename": "Assistant/src/structures/ClientUser.ts",
      "line": 20,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "UserData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "UserData"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/ClientUser.ts",
            "line": 24,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "verified",
          "location": {
            "filename": "Assistant/src/structures/ClientUser.ts",
            "line": 21,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "email",
          "location": {
            "filename": "Assistant/src/structures/ClientUser.ts",
            "line": 22,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "UserData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "UserData"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/ClientUser.ts",
            "line": 30,
            "col": 4
          }
        }
      ],
      "extends": "User",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GuildChannel",
    "location": {
      "filename": "Assistant/src/structures/guild/GuildChannel.ts",
      "line": 23,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "ChannelData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelData"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/guild/GuildChannel.ts",
            "line": 33,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": "Name of the channel",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "Assistant/src/structures/guild/GuildChannel.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "jsDoc": "Position of the channel",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "position",
          "location": {
            "filename": "Assistant/src/structures/guild/GuildChannel.ts",
            "line": 27,
            "col": 4
          }
        },
        {
          "jsDoc": "Permissions of the channel",
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Permission",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Permission"
              }
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissions",
          "location": {
            "filename": "Assistant/src/structures/guild/GuildChannel.ts",
            "line": 29,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "ChannelData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ChannelData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/GuildChannel.ts",
            "line": 40,
            "col": 4
          }
        },
        {
          "jsDoc": "Guild of the channel",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Guild",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Guild"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/GuildChannel.ts",
            "line": 52,
            "col": 4
          }
        },
        {
          "jsDoc": "Used edit the channel\r\n\t@param o Channel Edit Options",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "o",
                "optional": false,
                "tsType": {
                  "repr": "ChannelEditOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ChannelEditOption"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/GuildChannel.ts",
            "line": 60,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to delete the channel",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/GuildChannel.ts",
            "line": 69,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to edit the channel position\r\n\t@param pos Position",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editPosition",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "pos",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/GuildChannel.ts",
            "line": 83,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to edit the channel permission\r\n\t@param overwriteID Overwrite ID\r\n\t@param o Edit Permission Options\r\n\t@returns",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editPermission",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "overwriteID",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "o",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "allow",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "deny",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "type",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "member",
                              "kind": "literal",
                              "literal": {
                                "kind": "string",
                                "string": "member"
                              }
                            },
                            {
                              "repr": "role",
                              "kind": "literal",
                              "literal": {
                                "kind": "string",
                                "string": "role"
                              }
                            }
                          ]
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/GuildChannel.ts",
            "line": 93,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to delete the channel permission\r\n\t@param overwriteID OverwriteID",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deletePermission",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "overwriteID",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/GuildChannel.ts",
            "line": 101,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to create an Invite to the channel\r\n\t@param o Invite Create Options",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createInvite",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "o",
                "optional": true,
                "tsType": {
                  "repr": "InviteCreateOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InviteCreateOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Invite",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Invite"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/GuildChannel.ts",
            "line": 109,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to get invites from the channel",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getInvites",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Invite",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Invite"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/GuildChannel.ts",
            "line": 117,
            "col": 4
          }
        }
      ],
      "extends": "Channel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Guild",
    "location": {
      "filename": "Assistant/src/structures/guild/Guild.ts",
      "line": 33,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "GuildData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GuildData"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 74,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "icon",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 35,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "splash",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 36,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "discoverySplash",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 37,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ownerID",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 38,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "region",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 39,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "afkChannelID",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 40,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "afkTimeout",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 41,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "widgetEnabled",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "widgetChannelID",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 43,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "verificationLevel",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 44,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "defaultMessageNotifications",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 45,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "explicitContentFilter",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 46,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "features",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 47,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mfaLevel",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 48,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "systemChannelID",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 49,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "systemChannelFlags",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 50,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "joinedAt",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 51,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "large",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 52,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "unavailable",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 53,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "memberCount",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 54,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "voiceStates",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 55,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "presences",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 56,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxPresences",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 57,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxMembers",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 58,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "vanityURLCode",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 59,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 60,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "banner",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 61,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "premiumTier",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 62,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "subscriptionCount",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 63,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "locale",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 64,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "publicUpdatesChannelID",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 65,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxVideoChannelUsers",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 66,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Collection",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "Role",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Role"
                  }
                }
              ],
              "typeName": "Collection"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "roles",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 67,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Collection",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "Member",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Member"
                  }
                }
              ],
              "typeName": "Collection"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "members",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 68,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Collection",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                },
                {
                  "repr": "Emoji",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Emoji"
                  }
                }
              ],
              "typeName": "Collection"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emojis",
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 69,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "GuildData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 83,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getInvites",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Invite",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Invite"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 167,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getAuditLogs",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "opt",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "user_id",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "action_type",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "GuildAuditLogActionType",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "GuildAuditLogActionType"
                          }
                        },
                        "typeParams": []
                      },
                      {
                        "name": "before",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "limit",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildAuditLog",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildAuditLog"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 177,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "o",
                "optional": false,
                "tsType": {
                  "repr": "GuildEditOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildEditOptions"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 202,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channels",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "GuildChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GuildChannel"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 209,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "o",
                "optional": false,
                "tsType": {
                  "repr": "ChannelEditOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ChannelEditOption"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 219,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "GuildChannel",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "GuildChannel"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "o",
                "optional": false,
                "tsType": {
                  "repr": "ChannelEditOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ChannelEditOption"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 224,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editChannelPosition",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "GuildChannel",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "GuildChannel"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "pos",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 229,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editChannelPermission",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "GuildChannel",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "GuildChannel"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "overwriteID",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "o",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "allow",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "deny",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "type",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "member",
                              "kind": "literal",
                              "literal": {
                                "kind": "string",
                                "string": "member"
                              }
                            },
                            {
                              "repr": "role",
                              "kind": "literal",
                              "literal": {
                                "kind": "string",
                                "string": "role"
                              }
                            }
                          ]
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 233,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteChannelPermission",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "GuildChannel",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "GuildChannel"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "overwriteID",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 237,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "GuildChannel",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "GuildChannel"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 241,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "o",
                "optional": false,
                "tsType": {
                  "repr": "RoleEditOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RoleEditOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 245,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Role",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Role"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "o",
                "optional": false,
                "tsType": {
                  "repr": "RoleEditOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RoleEditOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 250,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Role",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Role"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 255,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBans",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "filter",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "",
                      "kind": "union",
                      "union": [
                        {
                          "repr": "Promise",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": [
                              {
                                "repr": "boolean",
                                "kind": "keyword",
                                "keyword": "boolean"
                              }
                            ],
                            "typeName": "Promise"
                          }
                        },
                        {
                          "repr": "boolean",
                          "kind": "keyword",
                          "keyword": "boolean"
                        }
                      ]
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "data",
                        "optional": false,
                        "tsType": {
                          "repr": "BanData",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "BanData"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "BanData",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "BanData"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 259,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "banMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Member",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Member"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "deleteMessagesDays",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "reason",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 268,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unbanMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Member",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Member"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 273,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "kickMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Member",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Member"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Guild.ts",
            "line": 277,
            "col": 4
          }
        }
      ],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "PermissionResolvable",
    "location": {
      "filename": "Assistant/src/command/permission/PermissionManager.ts",
      "line": 19,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "Permission",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Permission"
            }
          },
          {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "PermissionTestResolvable",
    "location": {
      "filename": "Assistant/src/command/permission/PermissionManager.ts",
      "line": 20,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "PermissionResolvable",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PermissionResolvable"
            }
          },
          {
            "repr": "null",
            "kind": "keyword",
            "keyword": "null"
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "PermissionManager",
    "location": {
      "filename": "Assistant/src/command/permission/PermissionManager.ts",
      "line": 22,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Permission",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Permission"
              }
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "_permissions",
          "location": {
            "filename": "Assistant/src/command/permission/PermissionManager.ts",
            "line": 23,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Registers a permission to the permission manager\r\n@param permission - Permission to register",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "register",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "permission",
                "optional": false,
                "tsType": {
                  "repr": "Permission",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Permission"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/permission/PermissionManager.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "jsDoc": "Registers a permission to the permission manager\r\nTo implement.\r\n@param permission - Permission to register",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "unregister",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "permission",
                "optional": false,
                "tsType": {
                  "repr": "Permission",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Permission"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/permission/PermissionManager.ts",
            "line": 48,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "registerAll",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "permissions",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "Permission",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Permission"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "boolean",
                "kind": "keyword",
                "keyword": "boolean"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/permission/PermissionManager.ts",
            "line": 60,
            "col": 4
          }
        },
        {
          "jsDoc": "Tests whether a permission can use a permission or not.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "testExecution",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "msg",
                "optional": false,
                "tsType": {
                  "repr": "Message",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Message"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "permissions",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "PermissionResolvable",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "PermissionResolvable"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "PermissionResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PermissionResolvable"
                  }
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/permission/PermissionManager.ts",
            "line": 71,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "permissions",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "Permission",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Permission"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/permission/PermissionManager.ts",
            "line": 102,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "getByName",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Permission",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Permission"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/permission/PermissionManager.ts",
            "line": 106,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "getById",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Permission",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Permission"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/permission/PermissionManager.ts",
            "line": 110,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "resolvePermission",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "perm",
                "optional": false,
                "tsType": {
                  "repr": "PermissionTestResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PermissionTestResolvable"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Permission",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Permission"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/permission/PermissionManager.ts",
            "line": 114,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Module",
    "location": {
      "filename": "Assistant/src/module/Module.ts",
      "line": 22,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "name",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "commands",
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "Command",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Command"
                  }
                }
              }
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "permissions",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "Permission",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Permission"
                    }
                  }
                }
              },
              "right": "<UNIMPLEMENTED>",
              "tsType": null
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "enabled",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              },
              "right": "<UNIMPLEMENTED>",
              "tsType": null
            }
          ],
          "location": {
            "filename": "Assistant/src/module/Module.ts",
            "line": 30,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "Assistant/src/module/Module.ts",
            "line": 23,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Command",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Command"
              }
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commands",
          "location": {
            "filename": "Assistant/src/module/Module.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Permission",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Permission"
              }
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissions",
          "location": {
            "filename": "Assistant/src/module/Module.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "enabled",
          "location": {
            "filename": "Assistant/src/module/Module.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Event",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Event"
              }
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "events",
          "location": {
            "filename": "Assistant/src/module/Module.ts",
            "line": 28,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "registerCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "command",
                "optional": false,
                "tsType": {
                  "repr": "Command",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Command"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/module/Module.ts",
            "line": 38,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unregisterCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "command",
                "optional": false,
                "tsType": {
                  "repr": "Command",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Command"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/module/Module.ts",
            "line": 46,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hasCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "command",
                "optional": false,
                "tsType": {
                  "repr": "Command",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Command"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/module/Module.ts",
            "line": 59,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "NewsChannel",
    "location": {
      "filename": "Assistant/src/structures/guild/NewsChannel.ts",
      "line": 20,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "ChannelData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelData"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/guild/NewsChannel.ts",
            "line": 22,
            "col": 4
          }
        }
      ],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "crosspostMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/NewsChannel.ts",
            "line": 26,
            "col": 4
          }
        }
      ],
      "extends": "TextChannel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "CommandEvents",
    "location": {
      "filename": "Assistant/src/command/Command.ts",
      "line": 21,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "execute",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "execute"
            }
          },
          {
            "repr": "error",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "error"
            }
          },
          {
            "repr": "cooldown",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "cooldown"
            }
          },
          {
            "repr": "permission",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "permission"
            }
          },
          {
            "repr": "nopermission",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "nopermission"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CommandArgOptions",
    "location": {
      "filename": "Assistant/src/command/Command.ts",
      "line": 28,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "api",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 29,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "1",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 1.0
                }
              },
              {
                "repr": "2",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 2.0
                }
              },
              {
                "repr": "3",
                "kind": "literal",
                "literal": {
                  "kind": "number",
                  "number": 3.0
                }
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "wrap",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 31,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "matches",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 36,
            "col": 4
          },
          "jsDoc": "@var matches\r\n@description [API 3] A test to check for arguments, if this is true, the command is allowed.",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "RegExp",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RegExp"
            }
          },
          "typeParams": []
        },
        {
          "name": "resolve",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 41,
            "col": 4
          },
          "jsDoc": "@var resolve\r\n@description [API 3] Resolve arguments based on custom regex.",
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "RegExp",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RegExp"
            }
          },
          "typeParams": []
        },
        {
          "name": "permissions",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 42,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "",
              "kind": "tuple",
              "tuple": [
                {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                },
                {
                  "repr": "PermissionResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PermissionResolvable"
                  }
                }
              ]
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CommandOptions",
    "location": {
      "filename": "Assistant/src/command/Command.ts",
      "line": 45,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "cooldown",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 46,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "disabledEvents",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 47,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "CommandEvents",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandEvents"
              }
            }
          },
          "typeParams": []
        },
        {
          "name": "argOptions",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 48,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "CommandArgOptions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CommandArgOptions"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Command",
    "location": {
      "filename": "Assistant/src/command/Command.ts",
      "line": 51,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": true,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "name",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "label",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "description",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "options",
                "optional": false,
                "tsType": {
                  "repr": "Partial",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "CommandOptions",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "CommandOptions"
                        }
                      }
                    ],
                    "typeName": "Partial"
                  }
                }
              },
              "right": "<UNIMPLEMENTED>",
              "tsType": null
            }
          ],
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 61,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 52,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "label",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 53,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 54,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "CommandOptions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CommandOptions"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commandOpts",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 55,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "aliases",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 56,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "usage",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 57,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Array",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "number",
                      "kind": "keyword",
                      "keyword": "number"
                    },
                    {
                      "repr": "Permission",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Permission"
                      }
                    }
                  ]
                }
              ],
              "typeName": "Array"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissions",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 58,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "module",
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 59,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Called when the command is executed.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "onRun",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "client",
                "optional": false,
                "tsType": {
                  "repr": "Client",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Client"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "msg",
                "optional": false,
                "tsType": {
                  "repr": "Message",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Message"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "args",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "additional",
                "optional": true,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 82,
            "col": 4
          }
        },
        {
          "jsDoc": "Called when execution fails\r\n\r\nIf this errors, it is supressed, and the command is disabled.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onError",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "error",
                "optional": false,
                "tsType": {
                  "repr": "Error",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Error"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "client",
                "optional": false,
                "tsType": {
                  "repr": "Client",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Client"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "msg",
                "optional": false,
                "tsType": {
                  "repr": "Message",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Message"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "additional",
                "optional": true,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 89,
            "col": 4
          }
        },
        {
          "jsDoc": "Called when a user is on cooldown.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onCooldown",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "client",
                "optional": false,
                "tsType": {
                  "repr": "Client",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Client"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "msg",
                "optional": false,
                "tsType": {
                  "repr": "Message",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Message"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "timeLeft",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "additional",
                "optional": true,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 94,
            "col": 4
          }
        },
        {
          "jsDoc": "Called if the user is missing permission.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onMissingPermission",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "client",
                "optional": false,
                "tsType": {
                  "repr": "Client",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Client"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "msg",
                "optional": false,
                "tsType": {
                  "repr": "Message",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Message"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "permission",
                "optional": false,
                "tsType": {
                  "repr": "Permission",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Permission"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "additional",
                "optional": true,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 99,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets the argument api version.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "argumentApi",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 105,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets an array of argument permissions.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "argPermissions",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "",
                "kind": "tuple",
                "tuple": [
                  {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  {
                    "repr": "PermissionResolvable",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "PermissionResolvable"
                    }
                  }
                ]
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/Command.ts",
            "line": 112,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "RequestHandler",
    "location": {
      "filename": "Assistant/src/net/rest/RequestHandler.ts",
      "line": 66,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "opts",
              "optional": false,
              "tsType": {
                "repr": "Partial",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "RequestHandlerOptions",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "RequestHandlerOptions"
                      }
                    }
                  ],
                  "typeName": "Partial"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "specialHeaders",
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "Header",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Header"
                  }
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/net/rest/RequestHandler.ts",
            "line": 72,
            "col": 4
          }
        }
      ],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Not really intented for public use, however, quickly makes a request\r\n\tand a request body, and returns the request with special headers.\r\n\t@param url\r\n\t@param method\r\n\t@param headers\r\n\t@param body\r\n\t@param immediate",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "makeAndSend",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "method",
                  "optional": false,
                  "tsType": {
                    "repr": "HTTPMethod",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "HTTPMethod"
                    }
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "identifier",
                "name": "body",
                "optional": true,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "headers",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Header",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Header"
                      }
                    }
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "immediate",
                  "optional": false,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Response",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Response"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/RequestHandler.ts",
            "line": 93,
            "col": 4
          }
        },
        {
          "jsDoc": "Makes a request with respect to client settings.\r\n\tPlease note this does not handle responses.\r\n\t@param req\r\n\t@param immediate\r\n\t@throws {ResponseError|Error}",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "request",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "req",
                "optional": false,
                "tsType": {
                  "repr": "Request",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Request"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "immediate",
                  "optional": false,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Response",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Response"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/RequestHandler.ts",
            "line": 133,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "TextChannel",
    "location": {
      "filename": "Assistant/src/structures/guild/TextChannel.ts",
      "line": 26,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "ChannelData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelData"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 36,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": "ID of last message sent in the channel",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastMessageId",
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "jsDoc": "Last message sent in the channel",
          "tsType": {
            "repr": "Message",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Message"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastMessage",
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "jsDoc": "Timestamp of last pinned message",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastPinTimestamp",
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "jsDoc": "Rate limit of the channel",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "rateLimitPerUser",
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 34,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "ChannelData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ChannelData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "jsDoc": "Send a message to the channel\r\n\t@param content",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "send",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "content",
                "optional": false,
                "tsType": {
                  "repr": "MessageContent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessageContent"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 68,
            "col": 4
          }
        },
        {
          "jsDoc": "Sends a codeblock\r\n\t@param code Language Code\r\n\t@param content Message Content",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sendBlock",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "code",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "content",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 91,
            "col": 4
          }
        },
        {
          "jsDoc": "Delete specific message in the channel\r\n\t@param id ID of message",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 99,
            "col": 4
          }
        },
        {
          "jsDoc": "Delete multiple messages (purge) in the channel\r\n\t@param messages IDs of messages",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteMessages",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "messages",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 107,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to edit a message in the channel\r\n\t@param content Message Content\r\n\t@param messageID Message ID",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "content",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "MessageConstructorData",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MessageConstructorData"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "messageID",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 116,
            "col": 4
          }
        },
        {
          "jsDoc": "Set the rate limit of the channel\r\n\t@param time Limit",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setRateLimit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "time",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 137,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to get messages from a channel\r\n\t@param limit Limit\r\n\t@param params Message Fetch Params\r\n\t@returns",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getMessages",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "limit",
                  "optional": false,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "identifier",
                "name": "params",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "around",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "before",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "after",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Message",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Message"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 152,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to add a reaction to a message\r\n\t@param id Message ID\r\n\t@param emoji Emoji String\r\n\t@returns",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addReaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 167,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to delete a reaction from a message\r\n\t@param userId User ID\r\n\t@param msgId Message ID\r\n\t@param emoji Emoji String\r\n\t@returns",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteReaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "userId",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "identifier",
                "name": "msgId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 178,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to get reactions from a message\r\n\t@param limit Limit\r\n\t@param params Fetch Reactions Params",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getReactions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "limit",
                  "optional": false,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "identifier",
                "name": "params",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "around",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "before",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "after",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 200,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to delete all reactions from a message\r\n\t@param msgId Message ID\r\n\t@param emoji Emoji String",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteAllReactions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "msgId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 210,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to pin a message\r\n\t@param id Message ID",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pinMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 229,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to unpin a message\r\n\t@param id Message ID",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unpinMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 237,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to create a webhook in the channel\r\n\t@param name Name of webhook\r\n\t@param avatar Avatar of webhook",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createWebhook",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "avatar",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Webhook",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Webhook"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/TextChannel.ts",
            "line": 246,
            "col": 4
          }
        }
      ],
      "extends": "GuildChannel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Collection",
    "location": {
      "filename": "Assistant/src/util/Collection.ts",
      "line": 21,
      "col": 0
    },
    "jsDoc": "@author discord.js\r\n@module https://github.com/discordjs/collection/tree/767b8fee4adcfe5a3106cbf3f138e28351a73020\r\n@todo Refactor",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "entries",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "union",
                "union": [
                  {
                    "repr": "ReadonlyArray",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "",
                          "kind": "typeOperator",
                          "typeOperator": {
                            "operator": "readonly",
                            "tsType": {
                              "repr": "",
                              "kind": "tuple",
                              "tuple": [
                                {
                                  "repr": "K",
                                  "kind": "typeRef",
                                  "typeRef": {
                                    "typeParams": null,
                                    "typeName": "K"
                                  }
                                },
                                {
                                  "repr": "V",
                                  "kind": "typeRef",
                                  "typeRef": {
                                    "typeParams": null,
                                    "typeName": "V"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "typeName": "ReadonlyArray"
                    }
                  },
                  {
                    "repr": "null",
                    "kind": "keyword",
                    "keyword": "null"
                  }
                ]
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 28,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "_array",
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "_keyArray",
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 23,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Collection",
            "kind": "typeQuery",
            "typeQuery": "Collection"
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "default",
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "MAX_SIZE",
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Collection",
            "kind": "typeQuery",
            "typeQuery": "Collection"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "<TODO>",
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 26,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Identical to [Map.get()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get).\r\n\tGets an element with the specified key, and returns its value, or `undefined` if the element does not exist.\r\n\t@param {*} key - The key to get from this collection\r\n\t@returns {* | undefined}",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 57,
            "col": 4
          }
        },
        {
          "jsDoc": "Identical to [Map.set()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/set).\r\n\tSets a new element in the collection with the specified key and value.\r\n\t@param {*} key - The key of the element to add\r\n\t@param {*} value - The value of the element to add\r\n\t@returns {Collection}",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "set",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false,
                "tsType": {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 68,
            "col": 4
          }
        },
        {
          "jsDoc": "Identical to [Map.has()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has).\r\n\tChecks if an element exists in the collection.\r\n\t@param {*} key - The key of the element to check for\r\n\t@returns {boolean} `true` if the element exists, `false` if it does not exist.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "has",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 81,
            "col": 4
          }
        },
        {
          "jsDoc": "Identical to [Map.delete()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete).\r\n\tDeletes an element from the collection.\r\n\t@param {*} key - The key to delete from the collection\r\n\t@returns {boolean} `true` if the element was removed, `false` if the element does not exist.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 91,
            "col": 4
          }
        },
        {
          "jsDoc": "Identical to [Map.clear()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear).\r\n\tRemoves all elements from the collection.\r\n\t@returns {undefined}",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "clear",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 102,
            "col": 4
          }
        },
        {
          "jsDoc": "Creates an ordered array of the values of this collection, and caches it internally. The array will only be\r\n\treconstructed if an item is added to or removed from the collection, or if you change the length of the array\r\n\titself. If you don't want this caching behavior, use `[...collection.values()]` or\r\n\t`Array.from(collection.values())` instead.\r\n\t@returns {Array}",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "array",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "V",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "V"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 113,
            "col": 4
          }
        },
        {
          "jsDoc": "Creates an ordered array of the keys of this collection, and caches it internally. The array will only be\r\n\treconstructed if an item is added to or removed from the collection, or if you change the length of the array\r\n\titself. If you don't want this caching behavior, use `[...collection.keys()]` or\r\n\t`Array.from(collection.keys())` instead.\r\n\t@returns {Array}",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "keyArray",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "K",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "K"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 125,
            "col": 4
          }
        },
        {
          "jsDoc": "Obtains the first value(s) in this collection.\r\n\t@param {number} [amount] Amount of values to obtain from the beginning\r\n\t@returns {*|Array<*>} A single value if no amount is provided or an array of values, starting from the end if\r\n\tamount is negative",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "first",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 136,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "first",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "V",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "V"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 137,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "first",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "V",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "V"
                    }
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 138,
            "col": 4
          }
        },
        {
          "jsDoc": "Obtains the first key(s) in this collection.\r\n\t@param {number} [amount] Amount of keys to obtain from the beginning\r\n\t@returns {*|Array<*>} A single key if no amount is provided or an array of keys, starting from the end if\r\n\tamount is negative",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "firstKey",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 152,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "firstKey",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "K",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "K"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 153,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "firstKey",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                },
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "K",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "K"
                    }
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 154,
            "col": 4
          }
        },
        {
          "jsDoc": "Shifts an element off the collection",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "shift",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "",
                  "kind": "tuple",
                  "tuple": [
                    {
                      "repr": "K",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "K"
                      }
                    },
                    {
                      "repr": "V",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "V"
                      }
                    }
                  ]
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 165,
            "col": 4
          }
        },
        {
          "jsDoc": "Obtains the last value(s) in this collection. This relies on {@link Collection#array}, and thus the caching\r\n\tmechanism applies here as well.\r\n\t@param {number} [amount] Amount of values to obtain from the end\r\n\t@returns {*|Array<*>} A single value if no amount is provided or an array of values, starting from the start if\r\n\tamount is negative",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "last",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 187,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "last",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "V",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "V"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 188,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "last",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "V",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "V"
                    }
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 189,
            "col": 4
          }
        },
        {
          "jsDoc": "Obtains the last key(s) in this collection. This relies on {@link Collection#keyArray}, and thus the caching\r\n\tmechanism applies here as well.\r\n\t@param {number} [amount] Amount of keys to obtain from the end\r\n\t@returns {*|Array<*>} A single key if no amount is provided or an array of keys, starting from the start if\r\n\tamount is negative",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastKey",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 204,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastKey",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "K",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "K"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 205,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastKey",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                },
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "K",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "K"
                    }
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 206,
            "col": 4
          }
        },
        {
          "jsDoc": "Obtains unique random value(s) from this collection. This relies on {@link Collection#array}, and thus the caching\r\n\tmechanism applies here as well.\r\n\t@param {number} [amount] Amount of values to obtain randomly\r\n\t@returns {*|Array<*>} A single value if no amount is provided or an array of values",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "random",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "V",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "V"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 220,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "random",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "V",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "V"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 221,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "random",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "V",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "V"
                    }
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 222,
            "col": 4
          }
        },
        {
          "jsDoc": "Obtains unique random key(s) from this collection. This relies on {@link Collection#keyArray}, and thus the caching\r\n\tmechanism applies here as well.\r\n\t@param {number} [amount] Amount of keys to obtain randomly\r\n\t@returns {*|Array<*>} A single key if no amount is provided or an array",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "randomKey",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "K",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "K"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 236,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "randomKey",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "K",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "K"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 237,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "randomKey",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "amount",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                },
                {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "K",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "K"
                    }
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 238,
            "col": 4
          }
        },
        {
          "jsDoc": "Searches for a single item where the given function returns a truthy value. This behaves like\r\n\t[Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\r\n\t<warn>All collections used in Discord.js are mapped using their `id` property, and if you want to find by id you\r\n\tshould use the `get` method. See\r\n\t[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>\r\n\t@param {Function} fn The function to test with (should return boolean)\r\n\t@param {*} [thisArg] Value to use as `this` when executing function\r\n\t@returns {*}\r\n\t@example collection.find(user => user.username === 'Bob');",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "find",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 257,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "find",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 258,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "find",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 259,
            "col": 4
          }
        },
        {
          "jsDoc": "Searches for the key of a single item where the given function returns a truthy value. This behaves like\r\n\t[Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex),\r\n\tbut returns the key rather than the positional index.\r\n\t@param {Function} fn The function to test with (should return boolean)\r\n\t@param {*} [thisArg] Value to use as `this` when executing function\r\n\t@returns {*}\r\n\t@example collection.findKey(user => user.username === 'Bob');",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "findKey",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 276,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "findKey",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 277,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "findKey",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                },
                {
                  "repr": "undefined",
                  "kind": "keyword",
                  "keyword": "undefined"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 278,
            "col": 4
          }
        },
        {
          "jsDoc": "Removes items that satisfy the provided filter function.\r\n\t@param {Function} fn Function used to test (should return a boolean)\r\n\t@param {*} [thisArg] Value to use as `this` when executing function\r\n\t@returns {number} The number of removed entries",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sweep",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 292,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sweep",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 293,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sweep",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              }
            ],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 294,
            "col": 4
          }
        },
        {
          "jsDoc": "Identical to\r\n\t[Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\r\n\tbut returns a Collection instead of an Array.\r\n\t@param {Function} fn The function to test with (should return boolean)\r\n\t@param {*} [thisArg] Value to use as `this` when executing function\r\n\t@returns {Collection}\r\n\t@example collection.filter(user => user.username === 'Bob');",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "filter",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 312,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "filter",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 313,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "filter",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 314,
            "col": 4
          }
        },
        {
          "jsDoc": "Partitions the collection into two collections where the first collection\r\n\tcontains the items that passed and the second contains the items that failed.\r\n\t@param {Function} fn Function used to test (should return a boolean)\r\n\t@param {*} [thisArg] Value to use as `this` when executing function\r\n\t@returns {Collection[]}\r\n\t@example const [big, small] = collection.partition(guild => guild.memberCount > 250);",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "partition",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "tuple",
              "tuple": [
                {
                  "repr": "this",
                  "kind": "this",
                  "this": true
                },
                {
                  "repr": "this",
                  "kind": "this",
                  "this": true
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 331,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "partition",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "tuple",
              "tuple": [
                {
                  "repr": "this",
                  "kind": "this",
                  "this": true
                },
                {
                  "repr": "this",
                  "kind": "this",
                  "this": true
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 332,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "partition",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "tuple",
              "tuple": [
                {
                  "repr": "this",
                  "kind": "this",
                  "this": true
                },
                {
                  "repr": "this",
                  "kind": "this",
                  "this": true
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 333,
            "col": 4
          }
        },
        {
          "jsDoc": "Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to\r\n\t[Array.flatMap()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap).\r\n\t@param {Function} fn Function that produces a new Collection\r\n\t@param {*} [thisArg] Value to use as `this` when executing function\r\n\t@returns {Collection}\r\n\t@example collection.flatMap(guild => guild.members.cache);",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "flatMap",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "Collection",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": [
                          {
                            "repr": "K",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "K"
                            }
                          },
                          {
                            "repr": "T",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "T"
                            }
                          }
                        ],
                        "typeName": "Collection"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Collection",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "K",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "K"
                    }
                  },
                  {
                    "repr": "T",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "T"
                    }
                  }
                ],
                "typeName": "Collection"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 355,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "flatMap",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "Collection",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": [
                          {
                            "repr": "K",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "K"
                            }
                          },
                          {
                            "repr": "T",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "T"
                            }
                          }
                        ],
                        "typeName": "Collection"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "This",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "This"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": false,
                "tsType": {
                  "repr": "This",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "This"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Collection",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "K",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "K"
                    }
                  },
                  {
                    "repr": "T",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "T"
                    }
                  }
                ],
                "typeName": "Collection"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              },
              {
                "name": "This"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 356,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "flatMap",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "Collection",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": [
                          {
                            "repr": "K",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "K"
                            }
                          },
                          {
                            "repr": "T",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "T"
                            }
                          }
                        ],
                        "typeName": "Collection"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              }
            ],
            "returnType": {
              "repr": "Collection",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "K",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "K"
                    }
                  },
                  {
                    "repr": "T",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "T"
                    }
                  }
                ],
                "typeName": "Collection"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 357,
            "col": 4
          }
        },
        {
          "jsDoc": "Maps each item to another value into an array. Identical in behavior to\r\n\t[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).\r\n\t@param {Function} fn Function that produces an element of the new array, taking three arguments\r\n\t@param {*} [thisArg] Value to use as `this` when executing function\r\n\t@returns {Array}\r\n\t@example collection.map(user => user.tag);",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "map",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 370,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "map",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "This",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "This"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": false,
                "tsType": {
                  "repr": "This",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "This"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "This"
              },
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 371,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "map",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "T",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "T"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 372,
            "col": 4
          }
        },
        {
          "jsDoc": "Maps each item to another value into a collection. Identical in behavior to\r\n\t[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).\r\n\t@param {Function} fn Function that produces an element of the new collection, taking three arguments\r\n\t@param {*} [thisArg] Value to use as `this` when executing function\r\n\t@returns {Collection}\r\n\t@example collection.mapValues(user => user.tag);",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mapValues",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Collection",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "K",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "K"
                    }
                  },
                  {
                    "repr": "T",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "T"
                    }
                  }
                ],
                "typeName": "Collection"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 389,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mapValues",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "This",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "This"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": false,
                "tsType": {
                  "repr": "This",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "This"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Collection",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "K",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "K"
                    }
                  },
                  {
                    "repr": "T",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "T"
                    }
                  }
                ],
                "typeName": "Collection"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "This"
              },
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 390,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mapValues",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              }
            ],
            "returnType": {
              "repr": "Collection",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "K",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "K"
                    }
                  },
                  {
                    "repr": "T",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "T"
                    }
                  }
                ],
                "typeName": "Collection"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 391,
            "col": 4
          }
        },
        {
          "jsDoc": "Checks if there exists an item that passes a test. Identical in behavior to\r\n\t[Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).\r\n\t@param {Function} fn Function used to test (should return a boolean)\r\n\t@param {*} [thisArg] Value to use as `this` when executing function\r\n\t@returns {boolean}\r\n\t@example collection.some(user => user.discriminator === '0000');",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "some",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 406,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "some",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 407,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "some",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 408,
            "col": 4
          }
        },
        {
          "jsDoc": "Checks if all items passes a test. Identical in behavior to\r\n\t[Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).\r\n\t@param {Function} fn Function used to test (should return a boolean)\r\n\t@param {*} [thisArg] Value to use as `this` when executing function\r\n\t@returns {boolean}\r\n\t@example collection.every(user => !user.bot);",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "every",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 424,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "every",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 425,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "every",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "boolean",
                      "kind": "keyword",
                      "keyword": "boolean"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 426,
            "col": 4
          }
        },
        {
          "jsDoc": "Applies a function to produce a single value. Identical in behavior to\r\n\t[Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).\r\n\t@param {Function} fn Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\r\n\tand `collection`\r\n\t@param {*} [initialValue] Starting value for the accumulator\r\n\t@returns {*}\r\n\t@example collection.reduce((acc, guild) => acc + guild.memberCount, 0);",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reduce",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "T",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "T"
                      }
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "accumulator",
                        "optional": false,
                        "tsType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "initialValue",
                "optional": true,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "T",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "T"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 443,
            "col": 4
          }
        },
        {
          "jsDoc": "Identical to\r\n\t[Map.forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach),\r\n\tbut returns the collection instead of undefined.\r\n\t@param {Function} fn Function to execute for each element\r\n\t@param {*} [thisArg] Value to use as `this` when executing function\r\n\t@returns {Collection}\r\n\t@example\r\n\tcollection\r\n\t .each(user => console.log(user.username))\r\n\t .filter(user => user.bot)\r\n\t .each(user => console.log(user.username));",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "each",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "void",
                      "kind": "keyword",
                      "keyword": "void"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 482,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "each",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "void",
                      "kind": "keyword",
                      "keyword": "void"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 483,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "each",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "void",
                      "kind": "keyword",
                      "keyword": "void"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "value",
                        "optional": false,
                        "tsType": {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "key",
                        "optional": false,
                        "tsType": {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 484,
            "col": 4
          }
        },
        {
          "jsDoc": "Runs a function on the collection and returns the collection.\r\n\t@param {Function} fn Function to execute\r\n\t@param {*} [thisArg] Value to use as `this` when executing function\r\n\t@returns {Collection}\r\n\t@example\r\n\tcollection\r\n\t .tap(coll => console.log(coll.size))\r\n\t .filter(user => user.bot)\r\n\t .tap(coll => console.log(coll.size))",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tap",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "void",
                      "kind": "keyword",
                      "keyword": "void"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 500,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tap",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "void",
                      "kind": "keyword",
                      "keyword": "void"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "this",
                        "optional": false,
                        "tsType": {
                          "repr": "T",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "T"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": false,
                "tsType": {
                  "repr": "T",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "T"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": [
              {
                "name": "T"
              }
            ]
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 501,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tap",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "fn",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "void",
                      "kind": "keyword",
                      "keyword": "void"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "collection",
                        "optional": false,
                        "tsType": {
                          "repr": "this",
                          "kind": "this",
                          "this": true
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "thisArg",
                "optional": true,
                "tsType": {
                  "repr": "unknown",
                  "kind": "keyword",
                  "keyword": "unknown"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 502,
            "col": 4
          }
        },
        {
          "jsDoc": "Creates an identical shallow copy of this collection.\r\n\t@returns {Collection}\r\n\t@example const newColl = someColl.clone();",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "clone",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 513,
            "col": 4
          }
        },
        {
          "jsDoc": "Combines this collection with others into a new collection. None of the source collections are modified.\r\n\t@param {...Collection} collections Collections to merge\r\n\t@returns {Collection}\r\n\t@example const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "concat",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "collections",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "Collection",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": [
                        {
                          "repr": "K",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "K"
                          }
                        },
                        {
                          "repr": "V",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "V"
                          }
                        }
                      ],
                      "typeName": "Collection"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 523,
            "col": 4
          }
        },
        {
          "jsDoc": "Checks if this collection shares identical items with another.\r\n\tThis is different to checking for equality using equal-signs, because\r\n\tthe collections may be different objects, but contain the same data.\r\n\t@param {Collection} collection Collection to compare with\r\n\t@returns {boolean} Whether the collections have identical contents",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "equals",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "collection",
                "optional": false,
                "tsType": {
                  "repr": "Collection",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "K",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "K"
                        }
                      },
                      {
                        "repr": "V",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "V"
                        }
                      }
                    ],
                    "typeName": "Collection"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 538,
            "col": 4
          }
        },
        {
          "jsDoc": "The sort method sorts the items of a collection in place and returns it.\r\n\tThe sort is not necessarily stable in Node 10 or older.\r\n\tThe default sort order is according to string Unicode code points.\r\n\t@param {Function} [compareFunction] Specifies a function that defines the sort order.\r\n\tIf omitted, the collection is sorted according to each character's Unicode code point value,\r\n\taccording to the string conversion of each element.\r\n\t@returns {Collection}\r\n\t@example collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sort",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "compareFunction",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "fnOrConstructor",
                    "fnOrConstructor": {
                      "constructor": false,
                      "tsType": {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      },
                      "params": [
                        {
                          "kind": "identifier",
                          "name": "firstValue",
                          "optional": false,
                          "tsType": {
                            "repr": "V",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "V"
                            }
                          }
                        },
                        {
                          "kind": "identifier",
                          "name": "secondValue",
                          "optional": false,
                          "tsType": {
                            "repr": "V",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "V"
                            }
                          }
                        },
                        {
                          "kind": "identifier",
                          "name": "firstKey",
                          "optional": false,
                          "tsType": {
                            "repr": "K",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "K"
                            }
                          }
                        },
                        {
                          "kind": "identifier",
                          "name": "secondKey",
                          "optional": false,
                          "tsType": {
                            "repr": "K",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "K"
                            }
                          }
                        }
                      ],
                      "typeParams": []
                    }
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 560,
            "col": 4
          }
        },
        {
          "jsDoc": "The intersect method returns a new structure containing items where the keys are present in both original structures.\r\n\t@param {Collection} other The other Collection to filter against\r\n\t@returns {Collection}",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "intersect",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "other",
                "optional": false,
                "tsType": {
                  "repr": "Collection",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "K",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "K"
                        }
                      },
                      {
                        "repr": "V",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "V"
                        }
                      }
                    ],
                    "typeName": "Collection"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Collection",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "K",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "K"
                    }
                  },
                  {
                    "repr": "V",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "V"
                    }
                  }
                ],
                "typeName": "Collection"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 581,
            "col": 4
          }
        },
        {
          "jsDoc": "The difference method returns a new structure containing items where the key is present in one of the original structures but not the other.\r\n\t@param {Collection} other The other Collection to filter against\r\n\t@returns {Collection}",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "difference",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "other",
                "optional": false,
                "tsType": {
                  "repr": "Collection",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "K",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "K"
                        }
                      },
                      {
                        "repr": "V",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "V"
                        }
                      }
                    ],
                    "typeName": "Collection"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Collection",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "K",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "K"
                    }
                  },
                  {
                    "repr": "V",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "V"
                    }
                  }
                ],
                "typeName": "Collection"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 590,
            "col": 4
          }
        },
        {
          "jsDoc": "The sorted method sorts the items of a collection and returns it.\r\n\tThe sort is not necessarily stable in Node 10 or older.\r\n\tThe default sort order is according to string Unicode code points.\r\n\t@param {Function} [compareFunction] Specifies a function that defines the sort order.\r\n\tIf omitted, the collection is sorted according to each character's Unicode code point value,\r\n\taccording to the string conversion of each element.\r\n\t@returns {Collection}\r\n\t@example collection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sorted",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "compareFunction",
                  "optional": false,
                  "tsType": {
                    "repr": "",
                    "kind": "fnOrConstructor",
                    "fnOrConstructor": {
                      "constructor": false,
                      "tsType": {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      },
                      "params": [
                        {
                          "kind": "identifier",
                          "name": "firstValue",
                          "optional": false,
                          "tsType": {
                            "repr": "V",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "V"
                            }
                          }
                        },
                        {
                          "kind": "identifier",
                          "name": "secondValue",
                          "optional": false,
                          "tsType": {
                            "repr": "V",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "V"
                            }
                          }
                        },
                        {
                          "kind": "identifier",
                          "name": "firstKey",
                          "optional": false,
                          "tsType": {
                            "repr": "K",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "K"
                            }
                          }
                        },
                        {
                          "kind": "identifier",
                          "name": "secondKey",
                          "optional": false,
                          "tsType": {
                            "repr": "K",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "K"
                            }
                          }
                        }
                      ],
                      "typeParams": []
                    }
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Collection.ts",
            "line": 604,
            "col": 4
          }
        }
      ],
      "extends": "Map",
      "implements": [],
      "typeParams": [
        {
          "name": "K"
        },
        {
          "name": "V"
        }
      ],
      "superTypeParams": [
        {
          "repr": "K",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "K"
          }
        },
        {
          "repr": "V",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "V"
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "Channel",
    "location": {
      "filename": "Assistant/src/structures/channel/Channel.ts",
      "line": 20,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": true,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "ChannelData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelData"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/channel/Channel.ts",
            "line": 23,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "ChannelTypesNumeric",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelTypesNumeric"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "typeNumeric",
          "location": {
            "filename": "Assistant/src/structures/channel/Channel.ts",
            "line": 21,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "ChannelData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ChannelData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/channel/Channel.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "ChannelTypes",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ChannelTypes"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/channel/Channel.ts",
            "line": 32,
            "col": 4
          }
        }
      ],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "DataStore",
    "location": {
      "filename": "Assistant/src/data/DataStore.ts",
      "line": 18,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": true,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "stucture",
              "optional": false,
              "tsType": {
                "repr": "V",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "V"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "limit",
              "optional": true,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/data/DataStore.ts",
            "line": 22,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "V",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "V"
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "structure",
          "location": {
            "filename": "Assistant/src/data/DataStore.ts",
            "line": 19,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Iterable",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                }
              ],
              "typeName": "Iterable"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "[Symbol.iterator]",
          "location": {
            "filename": "Assistant/src/data/DataStore.ts",
            "line": 78,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Updates the structure in the store.\r\n\t\r\n\t@warn If it is a promise, there is no garauntee\r\n\tit will update to the client accessor immediately.\r\n\t@param structure",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "structure",
                "optional": false,
                "tsType": {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "V",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "V"
                        }
                      }
                    ],
                    "typeName": "Promise"
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataStore.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "jsDoc": "Get the structure from the store.\r\n\t@param id",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                },
                {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "V",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "V"
                            }
                          },
                          {
                            "repr": "null",
                            "kind": "keyword",
                            "keyword": "null"
                          }
                        ]
                      }
                    ],
                    "typeName": "Promise"
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataStore.ts",
            "line": 40,
            "col": 4
          }
        },
        {
          "jsDoc": "Add the structure from the store",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "add",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "idOrData",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "K",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "K"
                      }
                    },
                    {
                      "repr": "Payload",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Payload"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "V",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "V"
                            }
                          },
                          {
                            "repr": "null",
                            "kind": "keyword",
                            "keyword": "null"
                          }
                        ]
                      }
                    ],
                    "typeName": "Promise"
                  }
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataStore.ts",
            "line": 45,
            "col": 4
          }
        },
        {
          "jsDoc": "Whether or not the id exists in the store.\r\n\t@param id",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "has",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "boolean",
                        "kind": "keyword",
                        "keyword": "boolean"
                      }
                    ],
                    "typeName": "Promise"
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataStore.ts",
            "line": 51,
            "col": 4
          }
        },
        {
          "jsDoc": "Deletes the id from the store.\r\n\t@param id",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                },
                {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "boolean",
                        "kind": "keyword",
                        "keyword": "boolean"
                      }
                    ],
                    "typeName": "Promise"
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataStore.ts",
            "line": 57,
            "col": 4
          }
        },
        {
          "jsDoc": "Sets the key of the structure into the datastore.\r\n\t@param id\r\n\t@param structure",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "set",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "structure",
                "optional": false,
                "tsType": {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "Promise",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "V",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "V"
                            }
                          },
                          {
                            "repr": "null",
                            "kind": "keyword",
                            "keyword": "null"
                          }
                        ]
                      }
                    ],
                    "typeName": "Promise"
                  }
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataStore.ts",
            "line": 64,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets the amount of \"keys\" or data in a store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "size",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataStore.ts",
            "line": 69,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets the size limit for this store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "limit",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataStore.ts",
            "line": 74,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "values",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Iterable",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "V",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "V"
                    }
                  }
                ],
                "typeName": "Iterable"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataStore.ts",
            "line": 79,
            "col": 4
          }
        },
        {
          "jsDoc": "Converts the object into an array.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toArray",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "V",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "V"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataStore.ts",
            "line": 84,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [
        {
          "name": "K"
        },
        {
          "name": "V"
        }
      ],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Base",
    "location": {
      "filename": "Assistant/src/structures/Base.ts",
      "line": 20,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": true,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "id",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/Base.ts",
            "line": 26,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": "ID given by Discord",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "location": {
            "filename": "Assistant/src/structures/Base.ts",
            "line": 24,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Calculated date that a structure was created using 1420070400000 as EPOCH",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createdAt",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/Base.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "jsDoc": "Called by assistant to update structure data.\r\n\tThis should be similar, if not equal to creating a new structure.\r\n\t@param data - The data to update the structure",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "AnyStructureData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "AnyStructureData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/Base.ts",
            "line": 43,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets the object to a string. (should include parents?)",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toString",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/Base.ts",
            "line": 48,
            "col": 4
          }
        },
        {
          "jsDoc": "Get the discord reuest handler of the client.",
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "request",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DiscordRequestHandler",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "DiscordRequestHandler"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/Base.ts",
            "line": 55,
            "col": 4
          }
        },
        {
          "jsDoc": "Protected so it's not accessible outside the class.\r\n\tWork around to typescript's \"protected\" variables.",
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Client",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Client"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/Base.ts",
            "line": 63,
            "col": 4
          }
        },
        {
          "jsDoc": "Protected so it's not accessible outside the class.\r\n\tWork around to typescript's \"protected\" variables.",
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "kind": "setter",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "client",
                "optional": false,
                "tsType": {
                  "repr": "Client",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Client"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/Base.ts",
            "line": 71,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "HeartBeatPacket",
    "location": {
      "filename": "Assistant/src/net/ws/packet/HeartbeatPacket.ts",
      "line": 18,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "interval",
              "optional": false,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/net/ws/packet/HeartbeatPacket.ts",
            "line": 25,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "interval",
          "location": {
            "filename": "Assistant/src/net/ws/packet/HeartbeatPacket.ts",
            "line": 19,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "from",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "p",
                "optional": false,
                "tsType": {
                  "repr": "Payload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Payload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "HeartBeatPacket",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "HeartBeatPacket"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/packet/HeartbeatPacket.ts",
            "line": 21,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "encodeData",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/packet/HeartbeatPacket.ts",
            "line": 30,
            "col": 4
          }
        }
      ],
      "extends": "Packet",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "ResumePacket",
    "location": {
      "filename": "Assistant/src/net/ws/packet/ResumePacket.ts",
      "line": 18,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "token",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "sessionId",
              "optional": true,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "lastSequence",
              "optional": true,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/net/ws/packet/ResumePacket.ts",
            "line": 27,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "token",
          "location": {
            "filename": "Assistant/src/net/ws/packet/ResumePacket.ts",
            "line": 19,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "sessionId",
          "location": {
            "filename": "Assistant/src/net/ws/packet/ResumePacket.ts",
            "line": 20,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastSequence",
          "location": {
            "filename": "Assistant/src/net/ws/packet/ResumePacket.ts",
            "line": 21,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "from",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "Payload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Payload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "ResumePacket",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ResumePacket"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/packet/ResumePacket.ts",
            "line": 23,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "encodeData",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/packet/ResumePacket.ts",
            "line": 34,
            "col": 4
          }
        }
      ],
      "extends": "Packet",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "PrefixResolveFunction",
    "location": {
      "filename": "Assistant/src/command/CommandHandler.ts",
      "line": 24,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "fnOrConstructor",
        "fnOrConstructor": {
          "constructor": false,
          "tsType": {
            "repr": "Promise",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              ],
              "typeName": "Promise"
            }
          },
          "params": [
            {
              "kind": "identifier",
              "name": "msg",
              "optional": false,
              "tsType": {
                "repr": "Message",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Message"
                }
              }
            }
          ],
          "typeParams": []
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "CommandHandlerOptions",
    "location": {
      "filename": "Assistant/src/command/CommandHandler.ts",
      "line": 26,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "prefix",
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 27,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "PrefixResolveFunction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "PrefixResolveFunction"
                }
              },
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            ]
          },
          "typeParams": []
        },
        {
          "name": "processor",
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 28,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "fnOrConstructor",
            "fnOrConstructor": {
              "constructor": false,
              "tsType": {
                "repr": "Promise",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "void",
                      "kind": "keyword",
                      "keyword": "void"
                    }
                  ],
                  "typeName": "Promise"
                }
              },
              "params": [
                {
                  "kind": "identifier",
                  "name": "msg",
                  "optional": false,
                  "tsType": {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                }
              ],
              "typeParams": []
            }
          },
          "typeParams": []
        },
        {
          "name": "allowBots",
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 29,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "allowMention",
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 30,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        },
        {
          "name": "additionalArgs",
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 31,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "typeParams": []
        },
        {
          "name": "debug",
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 32,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "CommandHandler",
    "location": {
      "filename": "Assistant/src/command/CommandHandler.ts",
      "line": 38,
      "col": 0
    },
    "jsDoc": "@todo Add module support.",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "options",
              "optional": false,
              "tsType": {
                "repr": "CommandHandlerOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "CommandHandlerOptions"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 45,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "PrefixResolveFunction",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "PrefixResolveFunction"
                }
              },
              {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            ]
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "prefix",
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 39,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Client",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Client"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "client",
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 40,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "CommandHandlerOptions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "CommandHandlerOptions"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "options",
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 41,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Start the command handler\r\n\tRegisters handlers and modules.\r\n\t@todo Make this handle custom interfaces.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "start",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 67,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "processMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "msg",
                "optional": false,
                "tsType": {
                  "repr": "Message",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Message"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 76,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "capsulateError",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "command",
                "optional": false,
                "tsType": {
                  "repr": "Command",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Command"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "error",
                "optional": false,
                "tsType": {
                  "repr": "Error",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Error"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "client",
                "optional": false,
                "tsType": {
                  "repr": "Client",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Client"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "msg",
                "optional": false,
                "tsType": {
                  "repr": "Message",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Message"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 147,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "getDefaults",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "CommandHandlerOptions",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "CommandHandlerOptions"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 156,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "registerModule",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "mod",
                "optional": false,
                "tsType": {
                  "repr": "Module",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Module"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 166,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "registerCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "command",
                "optional": false,
                "tsType": {
                  "repr": "Command",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Command"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 172,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unregisterCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "command",
                "optional": false,
                "tsType": {
                  "repr": "Command",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Command"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 180,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "commands",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "Command",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Command"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 196,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "modules",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "Module",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Module"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/CommandHandler.ts",
            "line": 208,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "ConnectionStates",
    "location": {
      "filename": "Assistant/src/net/ws/Connector.ts",
      "line": 24,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "CONNECTED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CONNECTED"
            }
          },
          {
            "repr": "CONNECTING",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "CONNECTING"
            }
          },
          {
            "repr": "DISCONNECTED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "DISCONNECTED"
            }
          },
          {
            "repr": "INITIALIZED",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "INITIALIZED"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Connector",
    "location": {
      "filename": "Assistant/src/net/ws/Connector.ts",
      "line": 26,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": true,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "gateway",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/net/ws/Connector.ts",
            "line": 41,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "WebSocket",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "WebSocket"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ws",
          "location": {
            "filename": "Assistant/src/net/ws/Connector.ts",
            "line": 27,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sequence",
          "location": {
            "filename": "Assistant/src/net/ws/Connector.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "sessionId",
          "location": {
            "filename": "Assistant/src/net/ws/Connector.ts",
            "line": 29,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Connects to the discord websocket based on the token.\r\n\t@param token - The token to pass to the Discord gateway",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "connect",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "token",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "intents",
                "optional": false,
                "tsType": {
                  "repr": "Intents",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Intents"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/Connector.ts",
            "line": 57,
            "col": 4
          }
        },
        {
          "jsDoc": "Send a payload to discord.\r\n\t@param payload",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "send",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "payload",
                "optional": false,
                "tsType": {
                  "repr": "Payload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Payload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/Connector.ts",
            "line": 84,
            "col": 4
          }
        },
        {
          "jsDoc": "Send a packet to discord.\r\n\t@param packet",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sendPacket",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "packet",
                "optional": false,
                "tsType": {
                  "repr": "Packet",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Packet"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/Connector.ts",
            "line": 99,
            "col": 4
          }
        },
        {
          "jsDoc": "Close the websocket",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "close",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/Connector.ts",
            "line": 106,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reconnect",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/Connector.ts",
            "line": 114,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets the state of the connection\r\n\t@readonly",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "state",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "ConnectionStates",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ConnectionStates"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/Connector.ts",
            "line": 124,
            "col": 4
          }
        },
        {
          "jsDoc": "Called when the websocket recieves a payload from discord.\r\n\t@param p",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "wsPacket",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "p",
                "optional": false,
                "tsType": {
                  "repr": "Payload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Payload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/Connector.ts",
            "line": 132,
            "col": 4
          }
        },
        {
          "jsDoc": "Called when the websocket encounters an error.\r\n\t@param error",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "wsError",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "error",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Event",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Event"
                      }
                    },
                    {
                      "repr": "ErrorEvent",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ErrorEvent"
                      }
                    },
                    {
                      "repr": "Error",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Error"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/Connector.ts",
            "line": 138,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "wsMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ev",
                "optional": false,
                "tsType": {
                  "repr": "MessageEvent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessageEvent"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/Connector.ts",
            "line": 140,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Member",
    "location": {
      "filename": "Assistant/src/structures/guild/Member.ts",
      "line": 24,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "MemberData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "MemberData"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/guild/Member.ts",
            "line": 44,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": "User of the member",
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "Assistant/src/structures/guild/Member.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "jsDoc": "Whether the member is guild owner",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "owner",
          "location": {
            "filename": "Assistant/src/structures/guild/Member.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "jsDoc": "IDs of the member's roles",
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "roles",
          "location": {
            "filename": "Assistant/src/structures/guild/Member.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "jsDoc": "The time for how long the user has boosted the guild for",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "premiumSince",
          "location": {
            "filename": "Assistant/src/structures/guild/Member.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "jsDoc": "Nick of the user",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "nick",
          "location": {
            "filename": "Assistant/src/structures/guild/Member.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "jsDoc": "Whether the member is muted",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mute",
          "location": {
            "filename": "Assistant/src/structures/guild/Member.ts",
            "line": 36,
            "col": 4
          }
        },
        {
          "jsDoc": "When the user joined at",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "joinedAt",
          "location": {
            "filename": "Assistant/src/structures/guild/Member.ts",
            "line": 38,
            "col": 4
          }
        },
        {
          "jsDoc": "Whether the user if deafened",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deaf",
          "location": {
            "filename": "Assistant/src/structures/guild/Member.ts",
            "line": 40,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "MemberData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MemberData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Member.ts",
            "line": 50,
            "col": 4
          }
        },
        {
          "jsDoc": "Guild of the member",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Guild",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Guild"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Member.ts",
            "line": 63,
            "col": 4
          }
        },
        {
          "jsDoc": "Permissions of the member (role based)",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissions",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Permission",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Permission"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Member.ts",
            "line": 70,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to ban the member",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ban",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Member.ts",
            "line": 96,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to unban the member\r\n\tNOTE: Useless method???",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unban",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Member.ts",
            "line": 104,
            "col": 4
          }
        },
        {
          "jsDoc": "User to kick the member",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "kick",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Member.ts",
            "line": 111,
            "col": 4
          }
        }
      ],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Embed",
    "location": {
      "filename": "Assistant/src/util/Embed.ts",
      "line": 17,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 21,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "embed",
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 18,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "content",
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 19,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Creates a field on the embed\r\n@param title - Short, bold text of embed\r\n@param description - Large text of embed\r\n@param inline - Should discord try to \"stack\" fields?",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addField",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "title",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "description",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "inline",
                  "optional": false,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "jsDoc": "Sets the main title of the embed\r\n@param title - The title of the embed",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setTitle",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "title",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 53,
            "col": 4
          }
        },
        {
          "jsDoc": "Sets the main title of the embed\r\n@param title - The title of the embed",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDescription",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "description",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 66,
            "col": 4
          }
        },
        {
          "jsDoc": "Sets the color of the embed\r\n@param resolvable - A resolvable hex color or string.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setColor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "resolvable",
                "optional": false,
                "tsType": {
                  "repr": "ColorResolvable",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ColorResolvable"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 75,
            "col": 4
          }
        },
        {
          "jsDoc": "Sets the image for the embed.\r\n@param url - Url of the image\r\n@param height - Height of the image\r\n@param width - Width of the image",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setImage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "height",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "width",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 95,
            "col": 4
          }
        },
        {
          "jsDoc": "Sets the video for the embed.\r\n@param url - Url of the video\r\n@param height - Height of the video\r\n@param width - Width of the video",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setVideo",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "height",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "width",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 110,
            "col": 4
          }
        },
        {
          "jsDoc": "Sets the thumbnail for the embed.\r\n@param url - Url of the thumbnail\r\n@param height - Height of the thumbnail\r\n@param width - Width of the thumbnail",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setThumbnail",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "height",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "width",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 125,
            "col": 4
          }
        },
        {
          "jsDoc": "Sets the timestamp on the embed\r\n@param date - Date of timestamp",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setTimestamp",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "date",
                "optional": false,
                "tsType": {
                  "repr": "Date",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Date"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 138,
            "col": 4
          }
        },
        {
          "jsDoc": "Sets the author of the embed\r\n@param name - Name of author\r\n@param iconUrl - Image of author\r\n@param url - Link of author",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setAuthor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "name",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "iconUrl",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "url",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "proxyurl",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 149,
            "col": 4
          }
        },
        {
          "jsDoc": "Sets the URL to the title of the embed.\r\n@param url",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setUrl",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 169,
            "col": 4
          }
        },
        {
          "jsDoc": "Sets the footer of the embed.\r\n@param text - Footer text\r\n@param iconUrl - Image",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setFooter",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "text",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "iconUrl",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 179,
            "col": 4
          }
        },
        {
          "jsDoc": "The content of the message\r\n@param message - Message",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "message",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 191,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hasVideo",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 196,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hasTitle",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 200,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hasDescription",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 204,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hasFooter",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 208,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hasImage",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 212,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hasTimestamp",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 216,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hasAuthor",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 220,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hasFields",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 224,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hasColor",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 228,
            "col": 4
          }
        },
        {
          "jsDoc": "Whether or not\r\n@param field - Field to check the existence of.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hasField",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "field",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Embed.ts",
            "line": 236,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Queue",
    "location": {
      "filename": "Assistant/src/util/Queue.ts",
      "line": 16,
      "col": 0
    },
    "jsDoc": "*\r\n                   _     _              _\r\n     /\\           (_)   | |            | |\r\n    /  \\   ___ ___ _ ___| |_ __ _ _ __ | |\r\n   / /\\ \\ / __/ __| / __| __/ _` | '_ \\| __|\r\n  / ____ \\\\__ \\__ \\ \\__ \\ || (_| | | | | |\r\n /_/    \\_\\___/___/_|___/\\__\\__,_|_| |_|\\__|\r\n\r\nCopyright (C) 2020 Bavfalcon9\r\n \r\nThis is private software, you cannot redistribute and/or modify it in any way\r\nunless given explicit permission to do so. If you have not been given explicit\r\npermission to view or modify this software you should take the appropriate actions\r\nto remove this software from your device immediately.",
    "classDef": {
      "isAbstract": true,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "size",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              "right": "<UNIMPLEMENTED>",
              "tsType": null
            }
          ],
          "location": {
            "filename": "Assistant/src/util/Queue.ts",
            "line": 22,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": "The current items in the queue",
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "elements",
          "location": {
            "filename": "Assistant/src/util/Queue.ts",
            "line": 18,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Size of the queue",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "size",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Queue.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "jsDoc": "Retrieves the first element of the queue",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "first",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Queue.ts",
            "line": 37,
            "col": 4
          }
        },
        {
          "jsDoc": "Dequeue a element of",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "dequeue",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Queue.ts",
            "line": 44,
            "col": 4
          }
        },
        {
          "jsDoc": "Queue",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "queue",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "element",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "replace",
                  "optional": false,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Queue.ts",
            "line": 51,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "executeQueue",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "element",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/Queue.ts",
            "line": 64,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "DMChannel",
    "location": {
      "filename": "Assistant/src/structures/channel/DMChannel.ts",
      "line": 21,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Used to send a message in the channel\r\n\t@param content Message Content",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "send",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "content",
                "optional": false,
                "tsType": {
                  "repr": "MessageContent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessageContent"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/channel/DMChannel.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "undefined",
              "kind": "keyword",
              "keyword": "undefined"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/channel/DMChannel.ts",
            "line": 42,
            "col": 4
          }
        }
      ],
      "extends": "TextChannel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "RulesChannel",
    "location": {
      "filename": "Assistant/src/structures/guild/RulesChannel.ts",
      "line": 20,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [],
      "extends": "GuildChannel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "MessageContent",
    "location": {
      "filename": "Assistant/src/structures/Message.ts",
      "line": 26,
      "col": 0
    },
    "jsDoc": null,
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "embed",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "EmbedData",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "EmbedData"
                      }
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "content",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "tts",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  "typeParams": []
                },
                {
                  "name": "allowed_mentions",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "roles",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "",
                            "kind": "array",
                            "array": {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            }
                          },
                          "typeParams": []
                        },
                        {
                          "name": "users",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "",
                            "kind": "array",
                            "array": {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            }
                          },
                          "typeParams": []
                        },
                        {
                          "name": "replied_user",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "boolean",
                            "kind": "keyword",
                            "keyword": "boolean"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "message_reference",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "",
                    "kind": "typeLiteral",
                    "typeLiteral": {
                      "methods": [],
                      "properties": [
                        {
                          "name": "message_id",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        },
                        {
                          "name": "channel_id",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        },
                        {
                          "name": "guild_id",
                          "params": [],
                          "computed": false,
                          "optional": true,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          "typeParams": []
                        }
                      ],
                      "callSignatures": [],
                      "indexSignatures": []
                    }
                  },
                  "typeParams": []
                },
                {
                  "name": "file",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "Uint8Array",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Uint8Array"
                    }
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Message",
    "location": {
      "filename": "Assistant/src/structures/Message.ts",
      "line": 43,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "MessageData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "MessageData"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 65,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": "Channel of the message",
          "tsType": {
            "repr": "TextChannel",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "TextChannel"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channel",
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 45,
            "col": 4
          }
        },
        {
          "jsDoc": "Author/User of the message",
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "author",
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 47,
            "col": 4
          }
        },
        {
          "jsDoc": "Content of the message",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "content",
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 49,
            "col": 4
          }
        },
        {
          "jsDoc": "Epoch timestamp of the message",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "timestamp",
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 51,
            "col": 4
          }
        },
        {
          "jsDoc": "[COMMAND UTIL] Prefix of the message",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "prefix",
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 53,
            "col": 4
          }
        },
        {
          "jsDoc": "[COMMAND UTIL] Arguments in the message",
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "args",
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 55,
            "col": 4
          }
        },
        {
          "jsDoc": "Embed in the message",
          "tsType": {
            "repr": "EmbedData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "EmbedData"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "embed",
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 57,
            "col": 4
          }
        },
        {
          "jsDoc": "Embeds in the message",
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "EmbedData",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "EmbedData"
              }
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "embeds",
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 59,
            "col": 4
          }
        },
        {
          "jsDoc": "Reactions in the message",
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "ReactionData",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "ReactionData"
              }
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "reactions",
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 61,
            "col": 4
          }
        },
        {
          "jsDoc": "Type of message",
          "tsType": {
            "repr": "MessageType",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MessageType"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 63,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "MessageData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessageData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 70,
            "col": 4
          }
        },
        {
          "jsDoc": "Get member context of the message",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "member",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Member",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Member"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 101,
            "col": 4
          }
        },
        {
          "jsDoc": "Get guild of the message",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "Guild",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Guild"
                  }
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 108,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to edit an existing message\r\n\t@param content New Message Content",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "content",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "MessageConstructorData",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MessageConstructorData"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 116,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to reply to a user\r\n\t@param content Message Content",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reply",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "content",
                "optional": false,
                "tsType": {
                  "repr": "MessageContent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessageContent"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 132,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to delete an existing message",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 155,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to pin a message",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pin",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 162,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to react to a message\r\n\t@param emoji Emoji or emoji string",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "react",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "emoji",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Emoji",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Emoji"
                      }
                    },
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 170,
            "col": 4
          }
        },
        {
          "jsDoc": "[UTILITY]\r\n\tGets the command from the sent message. (may be deprecated in the future)\r\n\t@param prefix",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "prefix",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/Message.ts",
            "line": 180,
            "col": 4
          }
        }
      ],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "UnknownChannel",
    "location": {
      "filename": "Assistant/src/structures/channel/UnknownChannel.ts",
      "line": 26,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "ChannelData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelData"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/channel/UnknownChannel.ts",
            "line": 28,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "ChannelData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ChannelData"
            }
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "data",
          "location": {
            "filename": "Assistant/src/structures/channel/UnknownChannel.ts",
            "line": 27,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [],
      "extends": "Channel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "DataManager",
    "location": {
      "filename": "Assistant/src/data/DataManager.ts",
      "line": 18,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": true,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "limit",
              "optional": true,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/data/DataManager.ts",
            "line": 24,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": "The limit on all stores.",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "limit",
          "location": {
            "filename": "Assistant/src/data/DataManager.ts",
            "line": 22,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Get all channels stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "channels",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DataStore",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "DataStore"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataManager.ts",
            "line": 31,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets all the emoijs stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "emojis",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DataStore",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "DataStore"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataManager.ts",
            "line": 36,
            "col": 4
          }
        },
        {
          "jsDoc": "Get all guidls stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "guilds",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DataStore",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "DataStore"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataManager.ts",
            "line": 41,
            "col": 4
          }
        },
        {
          "jsDoc": "Get all messages stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "messages",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DataStore",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "DataStore"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataManager.ts",
            "line": 46,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets all the users stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "users",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DataStore",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "DataStore"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataManager.ts",
            "line": 51,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets all the reactions stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "reactions",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DataStore",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "DataStore"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/DataManager.ts",
            "line": 56,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "namespace",
    "name": "Async",
    "location": {
      "filename": "./src/util/Async.ts",
      "line": 1,
      "col": 0
    },
    "jsDoc": null,
    "namespaceDef": {
      "elements": [
        {
          "kind": "function",
          "name": "Sleep",
          "location": {
            "filename": "Assistant/src/util/Async.ts",
            "line": 16,
            "col": 0
          },
          "jsDoc": "*\r\n                   _     _              _\r\n     /\\           (_)   | |            | |\r\n    /  \\   ___ ___ _ ___| |_ __ _ _ __ | |\r\n   / /\\ \\ / __/ __| / __| __/ _` | '_ \\| __|\r\n  / ____ \\\\__ \\__ \\ \\__ \\ || (_| | | | | |\r\n /_/    \\_\\___/___/_|___/\\__\\__,_|_| |_|\\__|\r\n\r\nCopyright (C) 2020 Bavfalcon9\r\n\r\nThis is private software, you cannot redistribute and/or modify it in any way\r\nunless given explicit permission to do so. If you have not been given explicit\r\npermission to view or modify this software you should take the appropriate actions\r\nto remove this software from your device immediately.",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "time",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "MessageCollector",
    "location": {
      "filename": "Assistant/src/util/collectors/MessageCollector.ts",
      "line": 22,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "opts",
              "optional": true,
              "tsType": {
                "repr": "CollectorOptions",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "CollectorOptions"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "filter",
              "optional": true,
              "tsType": {
                "repr": "MessageFilterType",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "MessageFilterType"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/util/collectors/MessageCollector.ts",
            "line": 26,
            "col": 4
          }
        }
      ],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "listener",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/util/collectors/MessageCollector.ts",
            "line": 32,
            "col": 4
          }
        }
      ],
      "extends": "Collector",
      "implements": [],
      "typeParams": [],
      "superTypeParams": [
        {
          "repr": "Message",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Message"
          }
        }
      ]
    }
  },
  {
    "kind": "variable",
    "name": "REST_VERSION",
    "location": {
      "filename": "Assistant/src/net/rest/Endpoints.ts",
      "line": 16,
      "col": 0
    },
    "jsDoc": "*\r\n                   _     _              _\r\n     /\\           (_)   | |            | |\r\n    /  \\   ___ ___ _ ___| |_ __ _ _ __ | |_\r\n   / /\\ \\ / __/ __| / __| __/ _` | '_ \\| __|\r\n  / ____ \\\\__ \\__ \\ \\__ \\ || (_| | | | | |_\r\n /_/    \\_\\___/___/_|___/\\__\\__,_|_| |_|\\__|\r\n\r\nCopyright (C) 2020 Bavfalcon9\r\n\r\nThis program is free software; you can redistribute it and/or\r\nmodify it under the terms of the GNU General Public License\r\nas published by the Free Software Foundation; either version 3\r\nof the License, or (at your option) any later version.",
    "variableDef": {
      "tsType": {
        "repr": "string",
        "kind": "keyword",
        "keyword": "string"
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "GATEWAY",
    "location": {
      "filename": "Assistant/src/net/rest/Endpoints.ts",
      "line": 17,
      "col": 0
    },
    "jsDoc": null,
    "variableDef": {
      "tsType": {
        "repr": "string",
        "kind": "keyword",
        "keyword": "string"
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "GATEWAY_URL",
    "location": {
      "filename": "Assistant/src/net/rest/Endpoints.ts",
      "line": 21,
      "col": 0
    },
    "jsDoc": null,
    "variableDef": {
      "tsType": {
        "repr": "string",
        "kind": "keyword",
        "keyword": "string"
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "DOMAIN",
    "location": {
      "filename": "Assistant/src/net/rest/Endpoints.ts",
      "line": 18,
      "col": 0
    },
    "jsDoc": null,
    "variableDef": {
      "tsType": {
        "repr": "string",
        "kind": "keyword",
        "keyword": "string"
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "BASE_URL",
    "location": {
      "filename": "Assistant/src/net/rest/Endpoints.ts",
      "line": 19,
      "col": 0
    },
    "jsDoc": null,
    "variableDef": {
      "tsType": {
        "repr": "string",
        "kind": "keyword",
        "keyword": "string"
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "BASE_API_URL",
    "location": {
      "filename": "Assistant/src/net/rest/Endpoints.ts",
      "line": 20,
      "col": 0
    },
    "jsDoc": null,
    "variableDef": {
      "tsType": {
        "repr": "string",
        "kind": "keyword",
        "keyword": "string"
      },
      "kind": "const"
    }
  },
  {
    "kind": "class",
    "name": "Endpoints",
    "location": {
      "filename": "Assistant/src/net/rest/Endpoints.ts",
      "line": 23,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "channel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "channel_purge",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "channel_ring",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "channel_crosspost",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 36,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "channel_resolve",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "additional",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 40,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "channel_messages",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "msgId",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 44,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "channel_permission",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "overwriteId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 48,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "channel_invites",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 52,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "channel_pins",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 56,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "channel_pin",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "msgId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 60,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "typing_indicator",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 64,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "message_reactions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "msgId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 68,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "message_reaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "msgId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "emojiId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 72,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "me_reaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "msgId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "emojiId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 76,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "user_reaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "msgId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "emojiId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "userId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 80,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 84,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_resolve",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "additional",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 88,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_channels",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 92,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_roles",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 96,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_role",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 100,
            "col": 6
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_emojis",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 104,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_emoji",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "emojiId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 108,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_regions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 112,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_invites",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 116,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_integrations",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 120,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_integration",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "intId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 124,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_widget",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 128,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_vanity_url",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 132,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_audit_logs",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 136,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_members",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 140,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_member",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 144,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_bans",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 148,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "guild_ban",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "userId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 152,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "invite",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "code",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 156,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "me_user",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 160,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "me_guilds",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 164,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "me_guild",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 168,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "me_channels",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 172,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "user",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 176,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "rest_gateway",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "bot",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 180,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "discordApplication",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "id",
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 184,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "applicationCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 188,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "applicationCommandGuild",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 192,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "interactionResponse",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "token",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 196,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "createWebhook",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 200,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "executeWebhook",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "token",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 204,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "editWebhook",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "wID",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "token",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "mID",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 208,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "getDMChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/Endpoints.ts",
            "line": 212,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "User",
    "location": {
      "filename": "Assistant/src/structures/User.ts",
      "line": 22,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "UserData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "UserData"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/User.ts",
            "line": 36,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": "Whether the user is a bot",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bot",
          "location": {
            "filename": "Assistant/src/structures/User.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "jsDoc": "Username of the user",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "username",
          "location": {
            "filename": "Assistant/src/structures/User.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "jsDoc": "Discriminator of the user",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "discriminator",
          "location": {
            "filename": "Assistant/src/structures/User.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "jsDoc": "Avatar hash of the user",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "avatar",
          "location": {
            "filename": "Assistant/src/structures/User.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "jsDoc": "Whether the user is system",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "system",
          "location": {
            "filename": "Assistant/src/structures/User.ts",
            "line": 32,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "UserData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "UserData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/User.ts",
            "line": 41,
            "col": 4
          }
        },
        {
          "jsDoc": "Send a DM to a user\r\n\t@param content Message Content",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "send",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "content",
                "optional": false,
                "tsType": {
                  "repr": "MessageContent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessageContent"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Message",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Message"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/User.ts",
            "line": 53,
            "col": 4
          }
        },
        {
          "jsDoc": "Get the DM Channel of the user",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getDMChannel",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "DMChannel",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "DMChannel"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/User.ts",
            "line": 64,
            "col": 4
          }
        },
        {
          "jsDoc": "Get the default avatar the user should have.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "defaultAvatar",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/User.ts",
            "line": 74,
            "col": 4
          }
        },
        {
          "jsDoc": "Mention string of the user",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mention",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/User.ts",
            "line": 81,
            "col": 4
          }
        },
        {
          "jsDoc": "The users username and discriminator combined.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tag",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/User.ts",
            "line": 88,
            "col": 4
          }
        }
      ],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "ClientEvents",
    "location": {
      "filename": "Assistant/src/Client.ts",
      "line": 46,
      "col": 0
    },
    "jsDoc": "Events emitted when recieved from the websocket.",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "ws",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "ws"
            }
          },
          {
            "repr": "error",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "error"
            }
          },
          {
            "repr": "unknown",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "unknown"
            }
          },
          {
            "repr": "ready",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "ready"
            }
          },
          {
            "repr": "resume",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "resume"
            }
          },
          {
            "repr": "reconnect",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "reconnect"
            }
          },
          {
            "repr": "disconnect",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "disconnect"
            }
          },
          {
            "repr": "channelCreate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "channelCreate"
            }
          },
          {
            "repr": "channelUpdate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "channelUpdate"
            }
          },
          {
            "repr": "channelDelete",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "channelDelete"
            }
          },
          {
            "repr": "interactionCreate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "interactionCreate"
            }
          },
          {
            "repr": "pinUpdate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "pinUpdate"
            }
          },
          {
            "repr": "guildAvailable",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "guildAvailable"
            }
          },
          {
            "repr": "guildUnavailable",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "guildUnavailable"
            }
          },
          {
            "repr": "guildCreate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "guildCreate"
            }
          },
          {
            "repr": "guildUpdate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "guildUpdate"
            }
          },
          {
            "repr": "guildDelete",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "guildDelete"
            }
          },
          {
            "repr": "banAdd",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "banAdd"
            }
          },
          {
            "repr": "banRemove",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "banRemove"
            }
          },
          {
            "repr": "emojisUpdate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "emojisUpdate"
            }
          },
          {
            "repr": "integrationsUpdate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "integrationsUpdate"
            }
          },
          {
            "repr": "memberJoin",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "memberJoin"
            }
          },
          {
            "repr": "memberRemove",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "memberRemove"
            }
          },
          {
            "repr": "memberUpdate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "memberUpdate"
            }
          },
          {
            "repr": "membersChunk",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "membersChunk"
            }
          },
          {
            "repr": "roleCreate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "roleCreate"
            }
          },
          {
            "repr": "roleUpdate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "roleUpdate"
            }
          },
          {
            "repr": "roleDelete",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "roleDelete"
            }
          },
          {
            "repr": "inviteCreate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "inviteCreate"
            }
          },
          {
            "repr": "inviteDelete",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "inviteDelete"
            }
          },
          {
            "repr": "message",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "message"
            }
          },
          {
            "repr": "messageCreate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "messageCreate"
            }
          },
          {
            "repr": "messageUpdate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "messageUpdate"
            }
          },
          {
            "repr": "messageDelete",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "messageDelete"
            }
          },
          {
            "repr": "messageDeleteBulk",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "messageDeleteBulk"
            }
          },
          {
            "repr": "reactionAdd",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "reactionAdd"
            }
          },
          {
            "repr": "reactionUpdate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "reactionUpdate"
            }
          },
          {
            "repr": "reactionRemove",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "reactionRemove"
            }
          },
          {
            "repr": "reactionRemoveAll",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "reactionRemoveAll"
            }
          },
          {
            "repr": "reactionRemoveEmoji",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "reactionRemoveEmoji"
            }
          },
          {
            "repr": "presenceUpdate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "presenceUpdate"
            }
          },
          {
            "repr": "typingStart",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "typingStart"
            }
          },
          {
            "repr": "userUpdate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "userUpdate"
            }
          },
          {
            "repr": "voiceStateUpdate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "voiceStateUpdate"
            }
          },
          {
            "repr": "voiceRegionUpdate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "voiceRegionUpdate"
            }
          },
          {
            "repr": "webhookUpdate",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "webhookUpdate"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "ClientOptions",
    "location": {
      "filename": "Assistant/src/Client.ts",
      "line": 97,
      "col": 0
    },
    "jsDoc": "Options for the client.",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "connection",
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 98,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "autoReconnect",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  "typeParams": []
                },
                {
                  "name": "maxReconnectTries",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "maxResumeTries",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "compress",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  "typeParams": []
                },
                {
                  "name": "timeout",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "respectDiscordGateway",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  "typeParams": []
                },
                {
                  "name": "emitPayloads",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "cache",
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 136,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "memory",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  "typeParams": []
                },
                {
                  "name": "updates",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  "typeParams": []
                },
                {
                  "name": "max",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "limit",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                },
                {
                  "name": "subLimit",
                  "params": [],
                  "computed": false,
                  "optional": true,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "sharding",
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 164,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "useDiscord",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "typeParams": []
        },
        {
          "name": "rest",
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 170,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "RequestHandlerOptions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RequestHandlerOptions"
            }
          },
          "typeParams": []
        },
        {
          "name": "intents",
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 171,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "",
                "kind": "array",
                "array": {
                  "repr": "IntentTypes",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "IntentTypes"
                  }
                }
              },
              {
                "repr": "Number",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Number"
                }
              }
            ]
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "ClientShardMode",
    "location": {
      "filename": "Assistant/src/Client.ts",
      "line": 184,
      "col": 0
    },
    "jsDoc": "Shard mode that the client is in.",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "union",
        "union": [
          {
            "repr": "Nodes",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "Nodes"
            }
          },
          {
            "repr": "Shards",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "Shards"
            }
          },
          {
            "repr": "Clusters",
            "kind": "literal",
            "literal": {
              "kind": "string",
              "string": "Clusters"
            }
          }
        ]
      },
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Client",
    "location": {
      "filename": "Assistant/src/Client.ts",
      "line": 186,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "opts",
                "optional": false,
                "tsType": {
                  "repr": "Partial",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "ClientOptions",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ClientOptions"
                        }
                      }
                    ],
                    "typeName": "Partial"
                  }
                }
              },
              "right": "<UNIMPLEMENTED>",
              "tsType": null
            },
            {
              "kind": "identifier",
              "name": "customStore",
              "optional": true,
              "tsType": {
                "repr": "DataManager",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "DataManager"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 200,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "ClientOptions",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ClientOptions"
            }
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "options",
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 187,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "Intents",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Intents"
            }
          },
          "readonly": true,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "intents",
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 188,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "Application",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Application"
                }
              },
              {
                "repr": "null",
                "kind": "keyword",
                "keyword": "null"
              }
            ]
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "application",
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 189,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "RequestHandler",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RequestHandler"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "requestHandler",
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 190,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "DiscordRequestHandler",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "DiscordRequestHandler"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "discordHandler",
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 191,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "ClientUser",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ClientUser"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 192,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Connects the client to the discord gateway.\r\n\t@param token",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "connect",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "token",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 242,
            "col": 4
          }
        },
        {
          "jsDoc": "Disconnects the bot.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "disconnect",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 274,
            "col": 4
          }
        },
        {
          "jsDoc": "Edit the bot's presence\r\n\t@param opt Presence Options",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editStatus",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "opt",
                "optional": false,
                "tsType": {
                  "repr": "PresenceOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "PresenceOptions"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 284,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets the oauth application from discord.",
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resolveApplication",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "Application",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Application"
                        }
                      },
                      {
                        "repr": "null",
                        "kind": "keyword",
                        "keyword": "null"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 302,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when the client is connected to discord.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "ready",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "ready"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "session_id",
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "shard",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "",
                              "kind": "array",
                              "array": {
                                "repr": "number",
                                "kind": "keyword",
                                "keyword": "number"
                              }
                            },
                            {
                              "repr": "null",
                              "kind": "keyword",
                              "keyword": "null"
                            }
                          ]
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "version",
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 313,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a channel is created.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "channelCreate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "channelCreate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "channel",
                        "optional": false,
                        "tsType": {
                          "repr": "Channel",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Channel"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 318,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a channel is updated.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "channelUpdate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "channelUpdate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "channel",
                        "optional": false,
                        "tsType": {
                          "repr": "Channel",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Channel"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 323,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a channel is deleted.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "channelDelete",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "channelDelete"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "channel",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Channel",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Channel"
                              }
                            },
                            {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            }
                          ]
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 328,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when the guild becomes availiable",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "guildAvailable",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "guildAvailable"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "guild",
                        "optional": false,
                        "tsType": {
                          "repr": "Guild",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Guild"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 333,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when the guild becomes availiable",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "guildUnavailable",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "guildUnavailable"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "guild",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Guild",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Guild"
                              }
                            },
                            {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "Guild",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Guild"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 338,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a guild is created",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "guildCreate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "guildCreate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "guild",
                        "optional": false,
                        "tsType": {
                          "repr": "Guild",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Guild"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 343,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a guild is updated",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "guildUpdate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "guildUpdate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "guild",
                        "optional": false,
                        "tsType": {
                          "repr": "Guild",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Guild"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 348,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a guild is deleted",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "guildUpdate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "guildUpdate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "guild",
                        "optional": false,
                        "tsType": {
                          "repr": "Guild",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Guild"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 353,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when the client recieves a message.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "message",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "message"
                      }
                    },
                    {
                      "repr": "messageCreate",
                      "kind": "literal",
                      "literal": {
                        "kind": "string",
                        "string": "messageCreate"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "message",
                        "optional": false,
                        "tsType": {
                          "repr": "Message",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Message"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 358,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a message is updated somehow.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "messageUpdate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "messageUpdate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "newMessage",
                        "optional": false,
                        "tsType": {
                          "repr": "Message",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Message"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "oldMessage",
                        "optional": true,
                        "tsType": {
                          "repr": "Message",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Message"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 363,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a message is deleted.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "messageDelete",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "messageDelete"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "message",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "Message",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Message"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            },
                            {
                              "repr": "Message",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Message"
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 368,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when (bulk) messages are deleted",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "messageDeleteBulk",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "messageDeleteBulk"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "messages",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "array",
                          "array": {
                            "repr": "",
                            "kind": "parenthesized",
                            "parenthesized": {
                              "repr": "",
                              "kind": "union",
                              "union": [
                                {
                                  "repr": "Message",
                                  "kind": "typeRef",
                                  "typeRef": {
                                    "typeParams": null,
                                    "typeName": "Message"
                                  }
                                },
                                {
                                  "repr": "string",
                                  "kind": "keyword",
                                  "keyword": "string"
                                }
                              ]
                            }
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 373,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a reaction is added",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "reactionAdd",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "reactionAdd"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "message",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "Message",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Message"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            },
                            {
                              "repr": "Message",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Message"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "member",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "Member",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Member"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            },
                            {
                              "repr": "Member",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Member"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "emoji",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "Emoji",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Emoji"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            },
                            {
                              "repr": "Emoji",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Emoji"
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 378,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a reaction is removed",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "reactionRemove",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "reactionRemove"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "message",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "Message",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Message"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            },
                            {
                              "repr": "Message",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Message"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "member",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "Member",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Member"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            },
                            {
                              "repr": "Member",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Member"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "emoji",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "Emoji",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Emoji"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            },
                            {
                              "repr": "Emoji",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Emoji"
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 383,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when all reactions are removed",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "reactionRemoveAll",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "reactionRemoveAll"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "message",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "Message",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Message"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            },
                            {
                              "repr": "Message",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Message"
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 388,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a specific emoji reaction is removed",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "reactionRemoveEmoji",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "reactionRemoveEmoji"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "message",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "Message",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Message"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            },
                            {
                              "repr": "Message",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Message"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "member",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "Member",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Member"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            },
                            {
                              "repr": "Member",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Member"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "emoji",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "Emoji",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Emoji"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            },
                            {
                              "repr": "Emoji",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Emoji"
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 393,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a presence is updated",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "presenceUpdate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "presenceUpdate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "presence",
                        "optional": false,
                        "tsType": {
                          "repr": "Presence",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Presence"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 398,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when typing starts",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "typingStart",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "typingStart"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "member",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "Member",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "Member"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            },
                            {
                              "repr": "Member",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Member"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "channel",
                        "optional": false,
                        "tsType": {
                          "repr": "TextChannel",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "TextChannel"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "timestamp",
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 403,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a user is updated",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "userUpdate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "userUpdate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "user",
                        "optional": false,
                        "tsType": {
                          "repr": "User",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "User"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 408,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a user is banned from a guild",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "banAdd",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "banAdd"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "user",
                        "optional": false,
                        "tsType": {
                          "repr": "User",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "User"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 413,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a user is unbanned from a guild",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "banRemove",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "banRemove"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "user",
                        "optional": false,
                        "tsType": {
                          "repr": "User",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "User"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 418,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when emojis in a guild are updated",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "emojisUpdate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "emojisUpdate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "Emojis",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "array",
                          "array": {
                            "repr": "Emoji",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "Emoji"
                            }
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 423,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a guild member joins a guild",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "memberJoin",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "memberJoin"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "member",
                        "optional": false,
                        "tsType": {
                          "repr": "Member",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Member"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "guild",
                        "optional": false,
                        "tsType": {
                          "repr": "Guild",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Guild"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 428,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a member is updated.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "memberUpdate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "memberUpdate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "member",
                        "optional": false,
                        "tsType": {
                          "repr": "Member",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Member"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "guild",
                        "optional": false,
                        "tsType": {
                          "repr": "Guild",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Guild"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 433,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a user leaves a guild or is banned.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "memberRemove",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "memberRemove"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "user",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "User",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "User"
                              }
                            },
                            {
                              "repr": "Member",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Member"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "guild",
                        "optional": false,
                        "tsType": {
                          "repr": "Guild",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Guild"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 438,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a role is created",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "roleCreate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "roleCreate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "role",
                        "optional": false,
                        "tsType": {
                          "repr": "Role",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Role"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "guild",
                        "optional": false,
                        "tsType": {
                          "repr": "Guild",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Guild"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 443,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a role is updated",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "roleUpdate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "roleUpdate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "role",
                        "optional": false,
                        "tsType": {
                          "repr": "Role",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Role"
                          }
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "guild",
                        "optional": false,
                        "tsType": {
                          "repr": "Guild",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Guild"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 448,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when a role is deleted",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "roleDelete",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "roleDelete"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "role",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "Role",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": null,
                                "typeName": "Role"
                              }
                            },
                            {
                              "repr": "Partial",
                              "kind": "typeRef",
                              "typeRef": {
                                "typeParams": [
                                  {
                                    "repr": "RoleData",
                                    "kind": "typeRef",
                                    "typeRef": {
                                      "typeParams": null,
                                      "typeName": "RoleData"
                                    }
                                  }
                                ],
                                "typeName": "Partial"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "guild",
                        "optional": false,
                        "tsType": {
                          "repr": "Guild",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Guild"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 453,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when an invite is created",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "inviteCreate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "inviteCreate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "invite",
                        "optional": false,
                        "tsType": {
                          "repr": "Invite",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Invite"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 458,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when an invite is delete",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "inviteDelete",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "inviteDelete"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "guildID",
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      },
                      {
                        "kind": "identifier",
                        "name": "code",
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 463,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when voice state is updated",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "voiceStateUpdate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "voiceStateUpdate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "state",
                        "optional": false,
                        "tsType": {
                          "repr": "VoiceState",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "VoiceState"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 468,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when voice region is updated",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "voiceRegionUpdate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "voiceRegionUpdate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "state",
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "typeLiteral",
                          "typeLiteral": {
                            "methods": [],
                            "properties": [
                              {
                                "name": "token",
                                "params": [],
                                "computed": false,
                                "optional": false,
                                "tsType": {
                                  "repr": "string",
                                  "kind": "keyword",
                                  "keyword": "string"
                                },
                                "typeParams": []
                              },
                              {
                                "name": "guild_id",
                                "params": [],
                                "computed": false,
                                "optional": false,
                                "tsType": {
                                  "repr": "string",
                                  "kind": "keyword",
                                  "keyword": "string"
                                },
                                "typeParams": []
                              },
                              {
                                "name": "endpoint",
                                "params": [],
                                "computed": false,
                                "optional": false,
                                "tsType": {
                                  "repr": "string",
                                  "kind": "keyword",
                                  "keyword": "string"
                                },
                                "typeParams": []
                              }
                            ],
                            "callSignatures": [],
                            "indexSignatures": []
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 473,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when an interaction is RECIEVED.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "interactionCreate",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "interactionCreate"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "interaction",
                        "optional": false,
                        "tsType": {
                          "repr": "Interaction",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Interaction"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 478,
            "col": 4
          }
        },
        {
          "jsDoc": "Emitted when the websocket **manager** recieves a event\r\n\t@requires ClientOptions.emitPayloads",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "ws",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "ws"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "fnOrConstructor",
                  "fnOrConstructor": {
                    "constructor": false,
                    "tsType": {
                      "repr": "any",
                      "kind": "keyword",
                      "keyword": "any"
                    },
                    "params": [
                      {
                        "kind": "identifier",
                        "name": "ev",
                        "optional": false,
                        "tsType": {
                          "repr": "Payload",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "Payload"
                          }
                        }
                      }
                    ],
                    "typeParams": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 484,
            "col": 4
          }
        },
        {
          "jsDoc": "Listen to a gateway event",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "on",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "ClientEvents",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ClientEvents"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "GenericFunction",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "GenericFunction"
                      }
                    },
                    {
                      "repr": "WrappedFunction",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "WrappedFunction"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 489,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "once",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "ClientEvents",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ClientEvents"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false,
                "tsType": {
                  "repr": "GenericFunction",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GenericFunction"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "this",
              "kind": "this",
              "this": true
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 493,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "ClientEvents",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ClientEvents"
                  }
                }
              },
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "args",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 497,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets the current shard mode of the client.\r\n\tEG:\r\n\t - Clusters\r\n\t - Shards\r\n\t - Generic",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "shardMode",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "ClientShardMode",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ClientShardMode"
                  }
                },
                {
                  "repr": "Unknown",
                  "kind": "literal",
                  "literal": {
                    "kind": "string",
                    "string": "Unknown"
                  }
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 508,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets the gateway information from discord.",
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getGatewayInfo",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GatewayResponseBot",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GatewayResponseBot"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 515,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sendPayload",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "p",
                "optional": false,
                "tsType": {
                  "repr": "Payload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Payload"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 536,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets the data store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "dataManager",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "DataManager",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "DataManager"
                  }
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 543,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ws",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Connector",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Connector"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 547,
            "col": 4
          }
        },
        {
          "jsDoc": "Sets the data store (once).",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "dataManager",
          "kind": "setter",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "store",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "DataManager",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "DataManager"
                      }
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 554,
            "col": 4
          }
        },
        {
          "jsDoc": "Get all channels stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channels",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DataStore",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "DataStore"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 565,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets all the emoijs stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emoijs",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DataStore",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "DataStore"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 572,
            "col": 4
          }
        },
        {
          "jsDoc": "Get all guidls stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guilds",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DataStore",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "DataStore"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 579,
            "col": 4
          }
        },
        {
          "jsDoc": "Get all messages stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "messages",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DataStore",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "DataStore"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 586,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets all the users stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "users",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DataStore",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "DataStore"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 593,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets all the reactions stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reactions",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "DataStore",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  {
                    "repr": "any",
                    "kind": "keyword",
                    "keyword": "any"
                  }
                ],
                "typeName": "DataStore"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/Client.ts",
            "line": 600,
            "col": 4
          }
        }
      ],
      "extends": "EventEmitter",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Role",
    "location": {
      "filename": "Assistant/src/structures/guild/Role.ts",
      "line": 22,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "RoleData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "RoleData"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/guild/Role.ts",
            "line": 38,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": "Name of the role",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "Assistant/src/structures/guild/Role.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "jsDoc": "Permissions of the role",
          "tsType": {
            "repr": "Permission",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Permission"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "permissions",
          "location": {
            "filename": "Assistant/src/structures/guild/Role.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "jsDoc": "Position of the role",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "position",
          "location": {
            "filename": "Assistant/src/structures/guild/Role.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "jsDoc": "Color hex of the role",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "color",
          "location": {
            "filename": "Assistant/src/structures/guild/Role.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "jsDoc": "Whether the role is hoisted",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hoist",
          "location": {
            "filename": "Assistant/src/structures/guild/Role.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "jsDoc": "Whether the role in mentionable",
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mentionable",
          "location": {
            "filename": "Assistant/src/structures/guild/Role.ts",
            "line": 34,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "RoleData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RoleData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Role.ts",
            "line": 43,
            "col": 4
          }
        },
        {
          "jsDoc": "Guild of the role",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Guild",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Guild"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Role.ts",
            "line": 56,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to edit the role\r\n\t@param o Role Edit Options",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "o",
                "optional": false,
                "tsType": {
                  "repr": "RoleEditOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RoleEditOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Role",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Role"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Role.ts",
            "line": 64,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to delete the role",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Role.ts",
            "line": 71,
            "col": 4
          }
        }
      ],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Presence",
    "location": {
      "filename": "Assistant/src/structures/guild/Presence.ts",
      "line": 53,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "any",
                "kind": "keyword",
                "keyword": "any"
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/guild/Presence.ts",
            "line": 65,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": "User of the presence",
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "user",
          "location": {
            "filename": "Assistant/src/structures/guild/Presence.ts",
            "line": 55,
            "col": 4
          }
        },
        {
          "jsDoc": "Guild ID of the presence",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guildID",
          "location": {
            "filename": "Assistant/src/structures/guild/Presence.ts",
            "line": 57,
            "col": 4
          }
        },
        {
          "jsDoc": "Status of the presence",
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "idle",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "idle"
                }
              },
              {
                "repr": "dnd",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "dnd"
                }
              },
              {
                "repr": "online",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "online"
                }
              },
              {
                "repr": "offline",
                "kind": "literal",
                "literal": {
                  "kind": "string",
                  "string": "offline"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "status",
          "location": {
            "filename": "Assistant/src/structures/guild/Presence.ts",
            "line": 59,
            "col": 4
          }
        },
        {
          "jsDoc": "Activities of the presence",
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Activity",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Activity"
              }
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "activities",
          "location": {
            "filename": "Assistant/src/structures/guild/Presence.ts",
            "line": 61,
            "col": 4
          }
        },
        {
          "jsDoc": "Client status of the presence",
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "desktop",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "mobile",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "web",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "clientStatus",
          "location": {
            "filename": "Assistant/src/structures/guild/Presence.ts",
            "line": 63,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Presence.ts",
            "line": 69,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Permission",
    "location": {
      "filename": "Assistant/src/command/permission/Permission.ts",
      "line": 19,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": true,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "name",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "id",
              "optional": false,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            },
            {
              "kind": "identifier",
              "name": "match",
              "optional": true,
              "tsType": {
                "repr": "RegExp",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "RegExp"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/command/permission/Permission.ts",
            "line": 24,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "Assistant/src/command/permission/Permission.ts",
            "line": 20,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "RegExp",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "RegExp"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "match",
          "location": {
            "filename": "Assistant/src/command/permission/Permission.ts",
            "line": 21,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Whether or not the user passes this permission.\r\nYou should change this",
          "accessibility": "public",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "can",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "msg",
                "optional": false,
                "tsType": {
                  "repr": "Message",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Message"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "user",
                "optional": false,
                "tsType": {
                  "repr": "Member",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Member"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/permission/Permission.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resolve",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "msg",
                "optional": false,
                "tsType": {
                  "repr": "Message",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Message"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "user",
                "optional": false,
                "tsType": {
                  "repr": "Member",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Member"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/permission/Permission.ts",
            "line": 36,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "id",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/command/permission/Permission.ts",
            "line": 44,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "GroupChannel",
    "location": {
      "filename": "Assistant/src/structures/channel/GroupChannel.ts",
      "line": 18,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [],
      "extends": "Channel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "DiscordRequestHandler",
    "location": {
      "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
      "line": 46,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "opts",
                "optional": false,
                "tsType": {
                  "repr": "ChannelEditOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ChannelEditOption"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "ChannelData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ChannelData"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 47,
            "col": 4
          }
        },
        {
          "jsDoc": "Deletes a message from a channel\r\n\t@param channelId\r\n\t@param messageid",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 72,
            "col": 4
          }
        },
        {
          "jsDoc": "Edit a channel\r\n\t@param channelId\r\n\t@param o",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "opts",
                "optional": false,
                "tsType": {
                  "repr": "ChannelEditOption",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ChannelEditOption"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "ChannelData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ChannelData"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 85,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editChannelPosition",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "pos",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 108,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editChannelPermission",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "overwriteId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "o",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "allow",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "deny",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "type",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "",
                          "kind": "union",
                          "union": [
                            {
                              "repr": "member",
                              "kind": "literal",
                              "literal": {
                                "kind": "string",
                                "string": "member"
                              }
                            },
                            {
                              "repr": "role",
                              "kind": "literal",
                              "literal": {
                                "kind": "string",
                                "string": "role"
                              }
                            }
                          ]
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 124,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteChannelPermission",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "overwriteId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 141,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChannelInvites",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "InviteData",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "InviteData"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 152,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getGuildInvites",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "InviteData",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "InviteData"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 160,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createChannelInvites",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "opts",
                "optional": true,
                "tsType": {
                  "repr": "InviteCreateOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InviteCreateOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "InviteData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "InviteData"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 168,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChannelPins",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "MessageData",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MessageData"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 187,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addPinChannelMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "msgId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 195,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deletePinChannelMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "msgId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 206,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createReaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "msgId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "emojiId",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "Emoji",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Emoji"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 217,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteMeReaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "msgId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "emojiId",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "string",
                      "kind": "keyword",
                      "keyword": "string"
                    },
                    {
                      "repr": "Emoji",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Emoji"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 232,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteUserReaction",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channeld",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "msgId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "emojiId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "userId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 247,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteAllReactions",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "msgId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 260,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteAllReactionsEmoji",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "msgId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "emojiId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 271,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "startTyping",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 283,
            "col": 4
          }
        },
        {
          "jsDoc": "Edit a guild\r\n\t@param guildId\r\n\t@param o",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editGuild",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "opts",
                "optional": false,
                "tsType": {
                  "repr": "GuildEditOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "GuildEditOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildData"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 296,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getAuditLogs",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "opt",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "user_id",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "action_type",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "GuildAuditLogActionType",
                          "kind": "typeRef",
                          "typeRef": {
                            "typeParams": null,
                            "typeName": "GuildAuditLogActionType"
                          }
                        },
                        "typeParams": []
                      },
                      {
                        "name": "before",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "limit",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "GuildAuditLogData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "GuildAuditLogData"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 324,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "opts",
                "optional": false,
                "tsType": {
                  "repr": "RoleEditOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RoleEditOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "RoleData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "RoleData"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 352,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "roleId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "opts",
                "optional": false,
                "tsType": {
                  "repr": "RoleEditOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RoleEditOptions"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "RoleData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "RoleData"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 364,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteRole",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 377,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getMessages",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "limit",
                  "optional": false,
                  "tsType": {
                    "repr": "number",
                    "kind": "keyword",
                    "keyword": "number"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              },
              {
                "kind": "identifier",
                "name": "params",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "around",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "before",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "after",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "MessageData",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MessageData"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 385,
            "col": 4
          }
        },
        {
          "jsDoc": "Deletes a message from a channel\r\n\t@param channelId\r\n\t@param messageid",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "messageid",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 410,
            "col": 4
          }
        },
        {
          "jsDoc": "Deletes a message from a channel\r\n\t@param channelId\r\n\t@param messageid",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteMessages",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "messages",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 426,
            "col": 4
          }
        },
        {
          "jsDoc": "Deletes a message from a channel\r\n\t@param channelId\r\n\t@param messageid",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "messageid",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "content",
                "optional": false,
                "tsType": {
                  "repr": "MessageConstructorData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessageConstructorData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "MessageData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MessageData"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 444,
            "col": 4
          }
        },
        {
          "jsDoc": "Creates a message in a channel\r\n\t@param channelId\r\n\t@param messageid",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "content",
                "optional": false,
                "tsType": {
                  "repr": "MessageContent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessageContent"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "MessageData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "MessageData"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 463,
            "col": 4
          }
        },
        {
          "jsDoc": "Pins a message in a channel\r\n\t@param channelId\r\n\t@param messageId",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pinMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "messageId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 481,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "channelId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "ChannelData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ChannelData"
                        }
                      },
                      {
                        "repr": "false",
                        "kind": "literal",
                        "literal": {
                          "kind": "boolean",
                          "boolean": false
                        }
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 492,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getApplication",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "ApplicationData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ApplicationData"
                        }
                      },
                      {
                        "repr": "boolean",
                        "kind": "keyword",
                        "keyword": "boolean"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 504,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getApplicationId",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "ApplicationData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ApplicationData"
                        }
                      },
                      {
                        "repr": "boolean",
                        "kind": "keyword",
                        "keyword": "boolean"
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 514,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createAppGlobalCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "command",
                "optional": false,
                "tsType": {
                  "repr": "ApplicationCommandData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationCommandData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "ApplicationCommandData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ApplicationCommandData"
                        }
                      },
                      {
                        "repr": "false",
                        "kind": "literal",
                        "literal": {
                          "kind": "boolean",
                          "boolean": false
                        }
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 526,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteAppGlobalCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "command",
                "optional": false,
                "tsType": {
                  "repr": "ApplicationCommandData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationCommandData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "ApplicationCommandData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ApplicationCommandData"
                        }
                      },
                      {
                        "repr": "false",
                        "kind": "literal",
                        "literal": {
                          "kind": "boolean",
                          "boolean": false
                        }
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 537,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createAppCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "guild",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "command",
                "optional": false,
                "tsType": {
                  "repr": "ApplicationCommandData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationCommandData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "ApplicationCommandData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ApplicationCommandData"
                        }
                      },
                      {
                        "repr": "false",
                        "kind": "literal",
                        "literal": {
                          "kind": "boolean",
                          "boolean": false
                        }
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 549,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteAppCommand",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "guild",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "command",
                "optional": false,
                "tsType": {
                  "repr": "ApplicationCommandData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationCommandData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "union",
                    "union": [
                      {
                        "repr": "ApplicationCommandData",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ApplicationCommandData"
                        }
                      },
                      {
                        "repr": "false",
                        "kind": "literal",
                        "literal": {
                          "kind": "boolean",
                          "boolean": false
                        }
                      }
                    ]
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 566,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createInteractionResponse",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "token",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "InteractionResponse",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InteractionResponse"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 582,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createWebhook",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "CreateWebhookData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CreateWebhookData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "WebhookData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "WebhookData"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 600,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "deleteWebhook",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "token",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Response",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Response"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 609,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "executeWebhook",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "token",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "ExecuteWebhookData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ExecuteWebhookData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "Response",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Response"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 616,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editWebhook",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "wID",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "token",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "mID",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "content",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "string",
                          "kind": "keyword",
                          "keyword": "string"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "embeds",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "",
                          "kind": "array",
                          "array": {
                            "repr": "EmbedData",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "EmbedData"
                            }
                          }
                        },
                        "typeParams": []
                      },
                      {
                        "name": "allowed_mentions",
                        "params": [],
                        "computed": false,
                        "optional": true,
                        "tsType": {
                          "repr": "",
                          "kind": "array",
                          "array": {
                            "repr": "",
                            "kind": "parenthesized",
                            "parenthesized": {
                              "repr": "",
                              "kind": "union",
                              "union": [
                                {
                                  "repr": "roles",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "string",
                                    "string": "roles"
                                  }
                                },
                                {
                                  "repr": "channels",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "string",
                                    "string": "channels"
                                  }
                                },
                                {
                                  "repr": "members",
                                  "kind": "literal",
                                  "literal": {
                                    "kind": "string",
                                    "string": "members"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "WebhookData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "WebhookData"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 628,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getDMChannel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "ChannelData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "ChannelData"
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 646,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getGuildBans",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "BanData",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "BanData"
                      }
                    }
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 657,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "banGuildMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "deleteMessagesDays",
                "optional": true,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              },
              {
                "kind": "identifier",
                "name": "reason",
                "optional": true,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 665,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "unbanGuildMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 675,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "kickMember",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "guildId",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/rest/DiscordRequestHandler.ts",
            "line": 682,
            "col": 4
          }
        }
      ],
      "extends": "RequestHandler",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Invite",
    "location": {
      "filename": "Assistant/src/structures/guild/Invite.ts",
      "line": 22,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "InviteData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "InviteData"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/guild/Invite.ts",
            "line": 40,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": "Code of the invite",
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "code",
          "location": {
            "filename": "Assistant/src/structures/guild/Invite.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "jsDoc": "Guild for the invite",
          "tsType": {
            "repr": "",
            "kind": "union",
            "union": [
              {
                "repr": "Partial",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "Guild",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Guild"
                      }
                    }
                  ],
                  "typeName": "Partial"
                }
              },
              {
                "repr": "Partial",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "GuildData",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "GuildData"
                      }
                    }
                  ],
                  "typeName": "Partial"
                }
              }
            ]
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild",
          "location": {
            "filename": "Assistant/src/structures/guild/Invite.ts",
            "line": 26,
            "col": 4
          }
        },
        {
          "jsDoc": "Channel invite was made",
          "tsType": {
            "repr": "PartialChannelData",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "PartialChannelData"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channel",
          "location": {
            "filename": "Assistant/src/structures/guild/Invite.ts",
            "line": 28,
            "col": 4
          }
        },
        {
          "jsDoc": "Creator of the invite",
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "User",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "User"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "inviter",
          "location": {
            "filename": "Assistant/src/structures/guild/Invite.ts",
            "line": 30,
            "col": 4
          }
        },
        {
          "jsDoc": "Target user of the invite",
          "tsType": {
            "repr": "Partial",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "User",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "User"
                  }
                }
              ],
              "typeName": "Partial"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "targetUser",
          "location": {
            "filename": "Assistant/src/structures/guild/Invite.ts",
            "line": 32,
            "col": 4
          }
        },
        {
          "jsDoc": "Target user type",
          "tsType": {
            "repr": "1",
            "kind": "literal",
            "literal": {
              "kind": "number",
              "number": 1.0
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "targetUserType",
          "location": {
            "filename": "Assistant/src/structures/guild/Invite.ts",
            "line": 34,
            "col": 4
          }
        },
        {
          "jsDoc": "Presence count of the invite",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "approximatePresenceCount",
          "location": {
            "filename": "Assistant/src/structures/guild/Invite.ts",
            "line": 36,
            "col": 4
          }
        },
        {
          "jsDoc": "Member count of the invite",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "approximateMemberCount",
          "location": {
            "filename": "Assistant/src/structures/guild/Invite.ts",
            "line": 38,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "InviteData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "InviteData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/Invite.ts",
            "line": 45,
            "col": 4
          }
        }
      ],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "VoiceChannel",
    "location": {
      "filename": "Assistant/src/structures/guild/VoiceChannel.ts",
      "line": 20,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "ChannelData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ChannelData"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/guild/VoiceChannel.ts",
            "line": 28,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": "Bitrate of the channel",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "bitrate",
          "location": {
            "filename": "Assistant/src/structures/guild/VoiceChannel.ts",
            "line": 22,
            "col": 4
          }
        },
        {
          "jsDoc": "User limit of the channel",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "userLimit",
          "location": {
            "filename": "Assistant/src/structures/guild/VoiceChannel.ts",
            "line": 24,
            "col": 4
          }
        },
        {
          "jsDoc": "Array of member IDs in the channel",
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "members",
          "location": {
            "filename": "Assistant/src/structures/guild/VoiceChannel.ts",
            "line": 26,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "ChannelData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ChannelData"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/VoiceChannel.ts",
            "line": 35,
            "col": 4
          }
        },
        {
          "jsDoc": "Set the bitrate of the channel\r\n\t@param bitrate Bitrate",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setBitrate",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "bitrate",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/VoiceChannel.ts",
            "line": 49,
            "col": 4
          }
        },
        {
          "jsDoc": "Set the user limit of the channel\r\n\t@param userLimit User Limit",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setUserLimit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "userLimit",
                "optional": false,
                "tsType": {
                  "repr": "number",
                  "kind": "keyword",
                  "keyword": "number"
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/VoiceChannel.ts",
            "line": 62,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to join a channel\r\n\t@param opt Join options",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "join",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "opt",
                "optional": true,
                "tsType": {
                  "repr": "Partial",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "typeLiteral",
                        "typeLiteral": {
                          "methods": [],
                          "properties": [
                            {
                              "name": "mute",
                              "params": [],
                              "computed": false,
                              "optional": false,
                              "tsType": {
                                "repr": "boolean",
                                "kind": "keyword",
                                "keyword": "boolean"
                              },
                              "typeParams": []
                            },
                            {
                              "name": "deaf",
                              "params": [],
                              "computed": false,
                              "optional": false,
                              "tsType": {
                                "repr": "boolean",
                                "kind": "keyword",
                                "keyword": "boolean"
                              },
                              "typeParams": []
                            }
                          ],
                          "callSignatures": [],
                          "indexSignatures": []
                        }
                      }
                    ],
                    "typeName": "Partial"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/VoiceChannel.ts",
            "line": 75,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to leave a channel",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "leave",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/VoiceChannel.ts",
            "line": 88,
            "col": 4
          }
        },
        {
          "jsDoc": "Used to edit the voice state\r\n\t@param opt Voice State Options",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "editVoiceState",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "opt",
                "optional": false,
                "tsType": {
                  "repr": "Partial",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": [
                      {
                        "repr": "",
                        "kind": "typeLiteral",
                        "typeLiteral": {
                          "methods": [],
                          "properties": [
                            {
                              "name": "mute",
                              "params": [],
                              "computed": false,
                              "optional": false,
                              "tsType": {
                                "repr": "boolean",
                                "kind": "keyword",
                                "keyword": "boolean"
                              },
                              "typeParams": []
                            },
                            {
                              "name": "deaf",
                              "params": [],
                              "computed": false,
                              "optional": false,
                              "tsType": {
                                "repr": "boolean",
                                "kind": "keyword",
                                "keyword": "boolean"
                              },
                              "typeParams": []
                            }
                          ],
                          "callSignatures": [],
                          "indexSignatures": []
                        }
                      }
                    ],
                    "typeName": "Partial"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/VoiceChannel.ts",
            "line": 102,
            "col": 4
          }
        }
      ],
      "extends": "GuildChannel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "RuntimeStore",
    "location": {
      "filename": "Assistant/src/data/runtime/RuntimeStore.ts",
      "line": 22,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "structure",
              "optional": false,
              "tsType": {
                "repr": "V",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "V"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "limit",
              "optional": true,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeStore.ts",
            "line": 25,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "IterableIterator",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                }
              ],
              "typeName": "IterableIterator"
            }
          },
          "readonly": false,
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "[Symbol.iterator]",
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeStore.ts",
            "line": 131,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Updates the structure in the store.\r\n\t\r\n\t@warn If it is a promise, there is no garauntee\r\n\tit will update to the client accessor immediately.\r\n\t@param structure",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "structure",
                "optional": false,
                "tsType": {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "V",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "V"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeStore.ts",
            "line": 36,
            "col": 4
          }
        },
        {
          "jsDoc": "Updates the structure in the store.\r\n\t\r\n\t@warn If it is a promise, there is no garauntee\r\n\tit will update to the client accessor immediately.\r\n\t@param data",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "updatePayload",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              }
            ],
            "returnType": {
              "repr": "V",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "V"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeStore.ts",
            "line": 54,
            "col": 4
          }
        },
        {
          "jsDoc": "Get the structure from the store.\r\n\t@param id",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeStore.ts",
            "line": 66,
            "col": 4
          }
        },
        {
          "jsDoc": "Add the structure from the store",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "add",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "idOrData",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "K",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "K"
                      }
                    },
                    {
                      "repr": "Payload",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Payload"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "append",
                  "optional": false,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeStore.ts",
            "line": 73,
            "col": 4
          }
        },
        {
          "jsDoc": "Whether or not the id exists in the store.\r\n\t@param id",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "has",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeStore.ts",
            "line": 102,
            "col": 4
          }
        },
        {
          "jsDoc": "Deletes the id from the store.\r\n\t@param id",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeStore.ts",
            "line": 110,
            "col": 4
          }
        },
        {
          "jsDoc": "Sets the key of the structure into the datastore.\r\n\t@param id\r\n\t@param structure",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "set",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "K",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "K"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "structure",
                "optional": false,
                "tsType": {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                }
              },
              {
                "kind": "assign",
                "left": {
                  "kind": "identifier",
                  "name": "overwrite",
                  "optional": false,
                  "tsType": {
                    "repr": "boolean",
                    "kind": "keyword",
                    "keyword": "boolean"
                  }
                },
                "right": "<UNIMPLEMENTED>",
                "tsType": null
              }
            ],
            "returnType": {
              "repr": "",
              "kind": "union",
              "union": [
                {
                  "repr": "V",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "V"
                  }
                },
                {
                  "repr": "null",
                  "kind": "keyword",
                  "keyword": "null"
                }
              ]
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeStore.ts",
            "line": 119,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "size",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "number",
              "kind": "keyword",
              "keyword": "number"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeStore.ts",
            "line": 127,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "values",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "IterableIterator",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "V",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "V"
                    }
                  }
                ],
                "typeName": "IterableIterator"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeStore.ts",
            "line": 132,
            "col": 4
          }
        }
      ],
      "extends": "DataStore",
      "implements": [],
      "typeParams": [
        {
          "name": "K",
          "constraint": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          }
        },
        {
          "name": "V",
          "constraint": {
            "repr": "Base",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Base"
            }
          }
        }
      ],
      "superTypeParams": [
        {
          "repr": "K",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "K"
          }
        },
        {
          "repr": "V",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "V"
          }
        }
      ]
    }
  },
  {
    "kind": "class",
    "name": "GenericConnector",
    "location": {
      "filename": "Assistant/src/net/ws/generic/Generic.ts",
      "line": 40,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "gateway",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/net/ws/generic/Generic.ts",
            "line": 45,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sequence",
          "location": {
            "filename": "Assistant/src/net/ws/generic/Generic.ts",
            "line": 41,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "wsPacket",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "payload",
                "optional": false,
                "tsType": {
                  "repr": "Payload",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Payload"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/generic/Generic.ts",
            "line": 58,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "wsError",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ev",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Event",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Event"
                      }
                    },
                    {
                      "repr": "ErrorEvent",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ErrorEvent"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/generic/Generic.ts",
            "line": 345,
            "col": 4
          }
        }
      ],
      "extends": "Connector",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "CategoryChannel",
    "location": {
      "filename": "Assistant/src/structures/guild/CategoryChannel.ts",
      "line": 19,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Children of a category channel",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "children",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "",
              "kind": "array",
              "array": {
                "repr": "GuildChannel",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GuildChannel"
                }
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/guild/CategoryChannel.ts",
            "line": 23,
            "col": 4
          }
        }
      ],
      "extends": "GuildChannel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "StoreChannel",
    "location": {
      "filename": "Assistant/src/structures/guild/StoreChannel.ts",
      "line": 18,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [],
      "extends": "GuildChannel",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "RuntimeManager",
    "location": {
      "filename": "Assistant/src/data/runtime/RuntimeManager.ts",
      "line": 25,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "limit",
              "optional": true,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeManager.ts",
            "line": 38,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": "Hard limit for how many structures are allowed in this store.",
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "hardLimit",
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeManager.ts",
            "line": 36,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": "Deletes a structure in the datastore based on it's id.\r\n\t@param id",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": {
              "repr": "boolean",
              "kind": "keyword",
              "keyword": "boolean"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeManager.ts",
            "line": 53,
            "col": 4
          }
        },
        {
          "jsDoc": "Get all channels stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "channels",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeManager.ts",
            "line": 60,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets all the emoijs stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "emojis",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeManager.ts",
            "line": 67,
            "col": 4
          }
        },
        {
          "jsDoc": "Get all guidls stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "guilds",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeManager.ts",
            "line": 74,
            "col": 4
          }
        },
        {
          "jsDoc": "Get all messages stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "messages",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeManager.ts",
            "line": 81,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets all the users stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "users",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeManager.ts",
            "line": 88,
            "col": 4
          }
        },
        {
          "jsDoc": "Gets all the reactions stored within the store.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "reactions",
          "kind": "getter",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/data/runtime/RuntimeManager.ts",
            "line": 95,
            "col": 4
          }
        }
      ],
      "extends": "DataManager",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "Payload",
    "location": {
      "filename": "Assistant/src/net/ws/packet/Packet.ts",
      "line": 34,
      "col": 0
    },
    "jsDoc": null,
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [
        {
          "name": "t",
          "location": {
            "filename": "Assistant/src/net/ws/packet/Packet.ts",
            "line": 35,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "GatewayEvent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayEvent"
            }
          },
          "typeParams": []
        },
        {
          "name": "s",
          "location": {
            "filename": "Assistant/src/net/ws/packet/Packet.ts",
            "line": 36,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "op",
          "location": {
            "filename": "Assistant/src/net/ws/packet/Packet.ts",
            "line": 37,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "OPCode",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "OPCode"
            }
          },
          "typeParams": []
        },
        {
          "name": "d",
          "location": {
            "filename": "Assistant/src/net/ws/packet/Packet.ts",
            "line": 38,
            "col": 4
          },
          "jsDoc": null,
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Packet",
    "location": {
      "filename": "Assistant/src/net/ws/packet/Packet.ts",
      "line": 41,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": true,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "op",
              "optional": false,
              "tsType": {
                "repr": "OPCode",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "OPCode"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "type",
              "optional": true,
              "tsType": {
                "repr": "GatewayEvent",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "GatewayEvent"
                }
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/net/ws/packet/Packet.ts",
            "line": 46,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "data",
          "location": {
            "filename": "Assistant/src/net/ws/packet/Packet.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "GatewayEvent",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "GatewayEvent"
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "type",
          "location": {
            "filename": "Assistant/src/net/ws/packet/Packet.ts",
            "line": 43,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "OPCode",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "OPCode"
            }
          },
          "readonly": false,
          "accessibility": "private",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "opCode",
          "location": {
            "filename": "Assistant/src/net/ws/packet/Packet.ts",
            "line": 44,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "encode",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "Payload",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Payload"
              }
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/packet/Packet.ts",
            "line": 51,
            "col": 4
          }
        },
        {
          "jsDoc": "Encode the data onto the packet class.",
          "accessibility": "protected",
          "optional": false,
          "isAbstract": true,
          "isStatic": false,
          "name": "encodeData",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/packet/Packet.ts",
            "line": 63,
            "col": 4
          }
        },
        {
          "jsDoc": "Runs when the payload is decoded.\r\n\tDevelopers can use this to register custom packets.",
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "decodeData",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/net/ws/packet/Packet.ts",
            "line": 69,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Application",
    "location": {
      "filename": "Assistant/src/structures/oauth/Application.ts",
      "line": 6,
      "col": 0
    },
    "jsDoc": null,
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": null,
          "accessibility": null,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "client",
              "optional": false,
              "tsType": {
                "repr": "Client",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Client"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "any",
                "kind": "keyword",
                "keyword": "any"
              }
            }
          ],
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 22,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "name",
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 7,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "icon",
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 8,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "description",
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 9,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "rpc_origins",
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 10,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bot_public",
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 11,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "bot_require_code_grant",
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 12,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "User",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "User"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "owner",
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 13,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "summary",
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 14,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "verify_key",
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 15,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "any",
            "kind": "keyword",
            "keyword": "any"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "team",
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 16,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "guild_id",
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 17,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "primary_sku_id",
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 18,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "slug",
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 19,
            "col": 4
          }
        },
        {
          "jsDoc": null,
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": true,
          "isAbstract": false,
          "isStatic": false,
          "name": "cover_image",
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 20,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": null,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "update",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "ApplicationData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ApplicationData"
                  }
                }
              }
            ],
            "returnType": null,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "Assistant/src/structures/oauth/Application.ts",
            "line": 39,
            "col": 4
          }
        }
      ],
      "extends": "Base",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  }
]